{"instruction": "가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 출시한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "최근 1년간 가장 많은 매출을 기록한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "가장 많이 재생된 플레이리스트는 무엇인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.PlaylistId) AS PlayCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY PlayCount DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 구매 금액은 얼마인가요?", "response": "SELECT AVG(Total) FROM Invoice;"}
{"instruction": "가장 많이 판매된 트랙의 이름과 판매량은?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "어떤 국가에서 가장 많은 고객이 오나요?", "response": "SELECT Country, COUNT(CustomerId) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "가장 많이 구매한 상위 5명의 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 5;"}
{"instruction": "어떤 아티스트의 트랙이 가장 많이 팔렸나요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "가장 많이 사용된 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, COUNT(Track.MediaTypeId) AS UsageCount FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY UsageCount DESC LIMIT 1;"}
{"instruction": "어떤 고객이 가장 많은 장르의 음악을 구매했나요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Customer.CustomerId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "지난 달 가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate BETWEEN DATE('now', 'start of month', '-1 month') AND DATE('now', 'start of month', '-1 day') GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "어떤 플레이리스트에 가장 많은 트랙이 포함되어 있나요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 구매한 상품의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "가장 많은 수익을 낸 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "가장 많은 고객을 보유한 도시는 어디인가요?", "response": "SELECT Customer.City, COUNT(Customer.CustomerId) AS CustomerCount FROM Customer GROUP BY Customer.City ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "가장 긴 트랙의 이름과 재생 시간은?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) AS MaxDuration FROM Track;"}
{"instruction": "지난 해 가장 많은 수익을 낸 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalRevenue FROM Invoice WHERE InvoiceDate BETWEEN DATE('now', 'start of year', '-1 year') AND DATE('now', 'start of year', '-1 day') GROUP BY BillingCountry ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "가장 최근에 추가된 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist ORDER BY Artist.ArtistId DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(Track.UnitPrice) FROM Track;"}
{"instruction": "가장 많이 팔린 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 비싼 트랙의 이름과 가격은?", "response": "SELECT Track.Name, Track.UnitPrice FROM Track ORDER BY Track.UnitPrice DESC LIMIT 1;"}
{"instruction": "가장 많은 장르를 다루는 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "가장 최근 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "총 고객 수는 몇 명인가요?", "response": "SELECT COUNT(*) FROM Customer;"}
{"instruction": "가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 출시한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "최근 1년간 가장 많은 매출을 기록한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "어떤 아티스트의 앨범이 가장 많이 판매되었나요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(Track.UnitPrice) FROM Track;"}
{"instruction": "가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Track.Milliseconds) / 1000 AS MinSeconds FROM Track;"}
{"instruction": "가장 최근에 구입한 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "가장 많은 트랙을 보유한 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS TrackCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "어떤 고객이 가장 많이 지출했나요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "가장 많은 장르의 트랙을 보유한 앨범은?", "response": "SELECT Album.Title, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "지난 주 가장 많이 판매된 트랙은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate BETWEEN DATE('now', '-7 days') AND DATE('now') GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많이 재생된 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(PlaylistTrack.PlaylistId) AS PlayCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Artist.ArtistId ORDER BY PlayCount DESC LIMIT 1;"}
{"instruction": "어떤 플레이리스트가 가장 다양한 장르를 포함하나요?", "response": "SELECT Playlist.Name, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 미디어 타입의 트랙 수는?", "response": "SELECT MediaType.Name, COUNT(Track.TrackId) AS TrackCount FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 등록된 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Name FROM Playlist ORDER BY PlaylistId DESC LIMIT 1;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙은 무엇인가요?", "response": "SELECT Track.Name, COUNT(PlaylistTrack.PlaylistId) AS PlaylistCount FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY PlaylistCount DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 출시한 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Genre.GenreId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "어떤 아티스트의 트랙이 가장 긴 평균 재생 시간을 가지나요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) AS AverageDuration FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY AverageDuration DESC LIMIT 1;"}
{"instruction": "가장 많이 구매된 장르의 총 판매량은 얼마인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "어떤 아티스트의 곡이 가장 많은 플레이리스트에 수록되었나요?", "response": "SELECT Artist.Name, COUNT(PlaylistTrack.PlaylistId) AS PlaylistIncludes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Artist.ArtistId ORDER BY PlaylistIncludes DESC LIMIT 1;"}
{"instruction": "가장 많은 고객이 구매한 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(DISTINCT Invoice.CustomerId) AS CustomerCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId GROUP BY Album.AlbumId ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "가장 높은 평균 가격의 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, AVG(Track.UnitPrice) AS AveragePrice FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY AveragePrice DESC LIMIT 1;"}
{"instruction": "가장 많은 나라에서 구매한 고객이 있는 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Customer.Country) AS CountryCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Artist.ArtistId ORDER BY CountryCount DESC LIMIT 1;"}
{"instruction": "전체 고객의 수는 몇 명인가요?", "response": "SELECT COUNT(CustomerId) FROM Customer;"}
{"instruction": "전체 플레이리스트의 수는 몇 개인가요?", "response": "SELECT COUNT(PlaylistId) FROM Playlist;"}
{"instruction": "전체 앨범의 수는 몇 개인가요?", "response": "SELECT COUNT(AlbumId) FROM Album;"}
{"instruction": "전체 아티스트의 수는 몇 명인가요?", "response": "SELECT COUNT(ArtistId) FROM Artist;"}
{"instruction": "트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "고객이 지출한 평균 금액은 얼마인가요?", "response": "SELECT AVG(Total) FROM Invoice;"}
{"instruction": "고객별 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(InvoiceId) AS PurchaseCount FROM Invoice GROUP BY CustomerId);"}
{"instruction": "판매된 트랙의 총 수는 몇 개인가요?", "response": "SELECT SUM(Quantity) FROM InvoiceLine;"}
{"instruction": "가장 많은 트랙을 판매한 국가는 어디이며, 그 수는 몇 개인가요?", "response": "SELECT BillingCountry, SUM(Quantity) AS TotalSales FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 높은 총 매출을 기록한 국가는 어디이며, 매출액은 얼마인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalRevenue FROM Invoice GROUP BY BillingCountry ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / (1000 * 60 * 60) AS TotalHours FROM Track;"}
{"instruction": "평균적으로 앨범 당 몇 개의 트랙이 있나요?", "response": "SELECT AVG(TrackCount) FROM (SELECT AlbumId, COUNT(TrackId) AS TrackCount FROM Track GROUP BY AlbumId);"}
{"instruction": "장르별로 평균 트랙 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "가장 많은 트랙이 포함된 장르는 무엇이며, 그 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TrackCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 나라별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(CustomerId) AS CustomerCount FROM Customer GROUP BY Country;"}
{"instruction": "각 나라별 총 매출액은 얼마인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalRevenue FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "미디어 타입별 평균 트랙 길이는 몇 초인가요?", "response": "SELECT MediaType.Name, AVG(Track.Milliseconds) / 1000 AS AverageLengthSeconds FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId;"}
{"instruction": "가장 긴 트랙과 가장 짧은 트랙의 시간 차이는 몇 초인가요?", "response": "SELECT MAX(Track.Milliseconds) / 1000 - MIN(Track.Milliseconds) / 1000 AS TimeDifferenceSeconds FROM Track;"}
{"instruction": "가장 많이 판매된 장르와 해당 장르의 가장 인기 있는 아티스트는 누구인가요?", "response": "SELECT Genre.Name AS GenreName, Artist.Name AS ArtistName, SUM(InvoiceLine.Quantity) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId GROUP BY Genre.GenreId, Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많은 수익을 낸 아티스트와 그 아티스트의 가장 인기 있는 앨범은 무엇인가요?", "response": "SELECT Artist.Name AS ArtistName, Album.Title AS AlbumTitle, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId GROUP BY Artist.ArtistId, Album.AlbumId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 트랙과 해당 트랙의 아티스트 및 장르는 무엇인가요?", "response": "SELECT Track.Name AS TrackName, Artist.Name AS ArtistName, Genre.Name AS GenreName, SUM(InvoiceLine.Quantity) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많은 플레이리스트에 속한 트랙의 이름, 아티스트, 장르 및 플레이리스트 수는?", "response": "SELECT Track.Name AS TrackName, Artist.Name AS ArtistName, Genre.Name AS GenreName, COUNT(PlaylistTrack.PlaylistId) AS PlaylistCount FROM PlaylistTrack JOIN Track ON PlaylistTrack.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Track.TrackId ORDER BY PlaylistCount DESC LIMIT 1;"}
{"instruction": "모든 고객을 대상으로 가장 인기 있는 아티스트의 트랙 평균 가격은 얼마인가요?", "response": "SELECT Artist.Name AS ArtistName, AVG(Track.UnitPrice) AS AveragePrice FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 많은 매출을 기록한 국가의 가장 인기 있는 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry AS Country, Genre.Name AS GenreName, SUM(InvoiceLine.Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많이 구매된 앨범의 이름, 해당 앨범을 구매한 고객 수와 총 판매량은?", "response": "SELECT Album.Title AS AlbumTitle, COUNT(DISTINCT Invoice.CustomerId) AS CustomerCount, SUM(InvoiceLine.Quantity) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 앨범의 총 개수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM Album;"}
{"instruction": "가장 최근에 추가된 고객의 이름은 무엇인가요?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY CustomerId DESC LIMIT 1;"}
{"instruction": "전체 트랙 중에서 가장 짧은 트랙의 길이는 얼마인가요?", "response": "SELECT MIN(Milliseconds) FROM Track;"}
{"instruction": "가장 많은 곡을 작곡한 작곡가는 누구인가요?", "response": "SELECT Composer, COUNT(*) AS NumberOfTracks FROM Track GROUP BY Composer ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "모든 인보이스의 총합은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 고객을 대상으로 한 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(InvoiceCount) FROM (SELECT CustomerId, COUNT(*) AS InvoiceCount FROM Invoice GROUP BY CustomerId);"}
{"instruction": "가장 많이 사용된 결제 방식은 무엇인가요?", "response": "SELECT BillingCountry, COUNT(*) AS Count FROM Invoice GROUP BY BillingCountry ORDER BY Count DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 이름의 첫 글자가 'A'로 시작하는 아티스트는 몇 명인가요?", "response": "SELECT COUNT(*) FROM Artist WHERE Name LIKE 'A%';"}
{"instruction": "총 몇 개의 플레이리스트가 있나요?", "response": "SELECT COUNT(*) FROM Playlist;"}
{"instruction": "가장 긴 트랙의 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 60000 AS LongestTrackMinutes FROM Track;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 많이 등장하는 아티스트의 이름은 무엇인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "지금까지 판매된 총 앨범 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId;"}
{"instruction": "가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "최근 6개월 동안 발생한 총 매출액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice WHERE InvoiceDate >= DATE('now', '-6 month');"}
{"instruction": "가장 많이 판매된 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "총 몇 개의 고유 장르가 트랙 리스트에 있나요?", "response": "SELECT COUNT(DISTINCT GenreId) FROM Track;"}
{"instruction": "모든 고객 중에서 가장 많이 구매한 상위 3명의 이름은 무엇인가요?", "response": "SELECT FirstName, LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Total) DESC LIMIT 3;"}
{"instruction": "가장 최근 구매한 트랙 5개의 제목은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "모든 트랙 중에서 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "가장 최근에 추가된 앨범의 제목은 무엇인가요?", "response": "SELECT Title FROM Album ORDER BY AlbumId DESC LIMIT 1;"}
{"instruction": "총 몇 명의 아티스트가 데이터베이스에 등록되어 있나요?", "response": "SELECT COUNT(*) FROM Artist;"}
{"instruction": "가장 많은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 적은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) ASC LIMIT 1;"}
{"instruction": "모든 고객의 총 구매 횟수는 몇 번인가요?", "response": "SELECT COUNT(*) FROM Invoice;"}
{"instruction": "가장 높은 가격의 앨범은 무엇인가요?", "response": "SELECT Album.Title, MAX(Track.UnitPrice) AS MaxPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY MaxPrice DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 출시한 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC;"}
{"instruction": "총 몇 개의 플레이리스트가 있나요?", "response": "SELECT COUNT(*) FROM Playlist;"}
{"instruction": "가장 많이 판매된 앨범의 판매량은 얼마인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객이 구매한 총 앨범 수는 몇 개인가요?", "response": "SELECT COUNT(DISTINCT Album.AlbumId) FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId;"}
{"instruction": "가장 최근 구매된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 많이 판매된 트랙은 몇 번 판매되었나요?", "response": "SELECT Track.Name, COUNT(*) AS SalesCount FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY SalesCount DESC LIMIT 1;"}
{"instruction": "모든 고객의 총 매출은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많은 장르의 트랙을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "가장 긴 플레이시간을 가진 트랙의 이름은 무엇인가요?", "response": "SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;"}
{"instruction": "가장 최근에 등록된 고객의 이름은 무엇인가요?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY CustomerId DESC LIMIT 1;"}
{"instruction": "각 국가별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC;"}
{"instruction": "총 몇 개의 미디어 타입이 사용되었나요?", "response": "SELECT COUNT(DISTINCT MediaTypeId) FROM Track;"}
{"instruction": "가장 많은 앨범을 제작한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY NumberOfAlbums DESC LIMIT 1;"}
{"instruction": "최근 1년 동안 가장 많은 매출을 올린 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice WHERE InvoiceDate >= DATE('now', '-1 year') GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 짧은 트랙의 재생 시간을 초 단위로 알려주세요.", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestTrackInSeconds FROM Track;"}
{"instruction": "모든 트랙에서 사용된 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000 AS TotalHours FROM Track;"}
{"instruction": "가장 비싼 트랙 5개의 제목과 가격을 알려주세요.", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 5;"}
{"instruction": "각 아티스트별로 가장 최근에 출시한 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(Album.ReleaseDate) FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "구매하지 않은 고객이 있나요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer LEFT JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.InvoiceId IS NULL;"}
{"instruction": "가장 많이 팔린 트랙의 장르를 알려주세요.", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 인보이스에서 가장 많이 사용된 결제 방식은 무엇인가요?", "response": "SELECT BillingCountry FROM Invoice GROUP BY BillingCountry ORDER BY COUNT(*) DESC LIMIT 1;"}
{"instruction": "가장 최근에 판매된 10개의 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 10;"}
{"instruction": "2023년에 출시된 모든 앨범의 목록을 알려주세요.", "response": "SELECT Album.Title FROM Album WHERE Album.ReleaseDate BETWEEN '2023-01-01' AND '2023-12-31';"}
{"instruction": "가장 많이 재생된 트랙 3개와 해당 트랙의 재생 횟수를 알려주세요.", "response": "SELECT Track.Name, COUNT(PlaylistTrack.TrackId) AS PlayCount FROM PlaylistTrack JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY PlaylistTrack.TrackId ORDER BY PlayCount DESC LIMIT 3;"}
{"instruction": "모든 고객 중에서 미국(USA)에 사는 고객의 수는 몇 명인가요?", "response": "SELECT COUNT(*) FROM Customer WHERE Country = 'USA';"}
{"instruction": "총 매출이 가장 높은 상위 3개의 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "장르별로 가장 많이 팔린 트랙의 이름을 알려주세요.", "response": "SELECT Genre.Name, Track.Name, MAX(InvoiceLine.Quantity) FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId;"}
{"instruction": "가장 최근에 등록된 고객의 이름과 등록 날짜를 알려주세요.", "response": "SELECT FirstName, LastName, MAX(CreationDate) FROM Customer;"}
{"instruction": "각 국가별로 가장 많이 구매한 고객과 그들의 총 구매액을 알려주세요.", "response": "SELECT Customer.Country, Customer.FirstName, Customer.LastName, MAX(Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.Country;"}
{"instruction": "모든 트랙 중에서 Rock 장르의 평균 트랙 길이(초)를 구해주세요.", "response": "SELECT AVG(Milliseconds) / 1000 AS AverageLengthSeconds FROM Track JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Rock';"}
{"instruction": "각 아티스트별로 출시한 앨범 수를 알려주세요.", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC;"}
{"instruction": "가장 많은 고객을 보유한 도시와 해당 도시의 고객 수를 알려주세요.", "response": "SELECT City, COUNT(*) AS CustomerCount FROM Customer GROUP BY City ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "2022년에 가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 가장 많은 트랙을 제공한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TrackCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "최근 3개월 동안 가장 많이 팔린 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-3 month') GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "고객별로 지출한 총 금액을 알려주세요.", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC;"}
{"instruction": "각 아티스트의 평균 트랙 길이는 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 1000 AS AverageTrackLengthSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY AverageTrackLengthSeconds DESC;"}
{"instruction": "2023년에 구매한 트랙이 가장 많은 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(InvoiceLine.InvoiceLineId) AS TracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId WHERE Invoice.InvoiceDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Customer.CustomerId ORDER BY TracksPurchased DESC LIMIT 1;"}
{"instruction": "모든 트랙 중에서 가장 긴 트랙의 이름과 길이를 알려주세요.", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 1000 AS TrackLengthSeconds FROM Track;"}
{"instruction": "각 국가에서 가장 최근에 구매한 주문의 날짜는 언제인가요?", "response": "SELECT BillingCountry, MAX(InvoiceDate) AS LatestPurchaseDate FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "모든 인보이스 중에서 평균 구매 금액이 가장 높은 국가는 어디인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AveragePurchase FROM Invoice GROUP BY BillingCountry ORDER BY AveragePurchase DESC LIMIT 1;"}
{"instruction": "가장 최근에 추가된 트랙 5개의 이름과 출시일을 알려주세요.", "response": "SELECT Track.Name, Track.Composer, Track.Milliseconds / 1000 AS LengthSeconds FROM Track ORDER BY Track.TrackId DESC LIMIT 5;"}
{"instruction": "어떤 플레이리스트에 가장 많은 트랙이 포함되어 있나요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "지난 달 가장 많이 판매된 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate BETWEEN DATE('now', 'start of month', '-1 month') AND DATE('now', 'start of month', '-1 day') GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "지금까지 가장 많은 수익을 낸 상품은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "모든 고객을 국가별로 분류하여 각 국가별 고객 수를 알려주세요.", "response": "SELECT Customer.Country, COUNT(Customer.CustomerId) AS NumberOfCustomers FROM Customer GROUP BY Customer.Country ORDER BY NumberOfCustomers DESC;"}
{"instruction": "가장 최근 구매가 이루어진 날짜는 언제인가요?", "response": "SELECT MAX(Invoice.InvoiceDate) AS MostRecentPurchase FROM Invoice;"}
{"instruction": "각 장르별로 평균 트랙 길이는 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.Milliseconds) / 1000 AS AverageLengthSeconds FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY AverageLengthSeconds DESC;"}
{"instruction": "지난 해에 가장 많이 팔린 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate BETWEEN DATE('last year', 'start of year') AND DATE('last year', 'end of year') GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "모든 인보이스 중에서 가장 높은 금액의 인보이스는 얼마인가요?", "response": "SELECT MAX(Total) AS HighestInvoiceAmount FROM Invoice;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalQuantity DESC LIMIT 1;"}
{"instruction": "가장 최근에 등록된 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer ORDER BY Customer.CustomerId DESC LIMIT 1;"}
{"instruction": "어느 아티스트가 가장 많은 트랙을 제공하나요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TrackCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "전체 매출 중 디지털 다운로드가 차지하는 비율은 얼마인가요?", "response": "SELECT (SELECT SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId WHERE Track.MediaTypeId = (SELECT MediaTypeId FROM MediaType WHERE Name = 'MPEG audio file')) / SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) * 100 AS DigitalDownloadPercentage FROM InvoiceLine;"}
{"instruction": "가장 많이 구매된 상위 3개 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSold DESC LIMIT 3;"}
{"instruction": "가장 많은 수익을 낸 상위 3개 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS Revenue FROM Invoice GROUP BY BillingCountry ORDER BY Revenue DESC LIMIT 3;"}
{"instruction": "지난 달 가장 많은 매출을 기록한 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate BETWEEN DATE('now', 'start of month', '-1 month') AND DATE('now', 'start of month', '-1 day') GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 최근에 출시된 앨범은 무엇인가요?", "response": "SELECT Album.Title, MAX(Album.ReleaseDate) AS LatestRelease FROM Album GROUP BY Album.AlbumId ORDER BY LatestRelease DESC LIMIT 1;"}
{"instruction": "전체 고객 중 이메일을 제공한 고객의 비율은 얼마인가요?", "response": "SELECT COUNT(Customer.Email) * 100.0 / COUNT(*) AS PercentageWithEmail FROM Customer WHERE Customer.Email IS NOT NULL;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Track;"}
{"instruction": "가장 많은 트랙을 보유한 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, COUNT(Track.TrackId) AS TrackCount FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 가입한 5명의 고객 이름은 무엇인가요?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY CustomerId DESC LIMIT 5;"}
{"instruction": "어떤 장르의 앨범이 가장 적게 판매되었나요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "가장 긴 트랙의 제목과 재생 시간은?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 60000.0 AS MaxDurationMinutes FROM Track;"}
{"instruction": "가장 짧은 트랙의 제목과 재생 시간은?", "response": "SELECT Track.Name, MIN(Track.Milliseconds) / 60000.0 AS MinDurationMinutes FROM Track;"}
{"instruction": "모든 고객이 구매한 총 트랙 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM InvoiceLine;"}
{"instruction": "가장 많이 판매된 앨범의 제목과 판매량은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 높은 매출을 기록한 달은 언제인가요?", "response": "SELECT strftime('%Y-%m', InvoiceDate) AS SaleMonth, SUM(Total) AS TotalSales FROM Invoice GROUP BY SaleMonth ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 가장 많은 곡을 출시한 아티스트의 이름과 곡 수는?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS NumberOfTracks FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "전체 매출 중 가장 적은 비율을 차지하는 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) / (SELECT SUM(Total) FROM Invoice) * 100 AS PercentageOfTotalSales FROM Invoice GROUP BY BillingCountry ORDER BY PercentageOfTotalSales ASC LIMIT 1;"}
{"instruction": "가장 많이 구매된 장르의 이름과 구매 횟수는?", "response": "SELECT Genre.Name, COUNT(*) AS PurchaseCount FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Genre.GenreId ORDER BY PurchaseCount DESC LIMIT 1;"}
{"instruction": "지난 해에 가장 많은 매출을 올린 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice WHERE strftime('%Y', InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 비싼 트랙의 가격과 제목은 무엇인가요?", "response": "SELECT Track.Name, MAX(Track.UnitPrice) AS MaxPrice FROM Track;"}
{"instruction": "최근 구매된 트랙 5개의 제목과 구매 날짜는?", "response": "SELECT Track.Name, InvoiceLine.InvoiceId, Invoice.InvoiceDate FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "지난 달에 가장 많이 판매된 트랙의 제목은 무엇인가요?", "response": "SELECT Track.Name, COUNT(*) AS SaleCount FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId WHERE Invoice.InvoiceDate >= DATE('now', 'start of month', '-1 month') AND Invoice.InvoiceDate < DATE('now', 'start of month') GROUP BY Track.TrackId ORDER BY SaleCount DESC LIMIT 1;"}
{"instruction": "올해 구매한 전체 트랙 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now');"}
{"instruction": "가장 많은 장르를 보유한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "가장 적게 판매된 앨범의 제목과 판매량은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "전체 고객 중 VIP 고객의 수는 몇 명인가요? (VIP는 총 구매액이 평균 이상인 고객)", "response": "SELECT COUNT(*) FROM (SELECT CustomerId, SUM(Total) AS TotalSpent FROM Invoice GROUP BY CustomerId HAVING TotalSpent >= (SELECT AVG(Total) FROM Invoice)) AS VIPCustomers;"}
{"instruction": "가장 최근에 가입한 고객의 이름은 무엇인가요?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY CustomerId DESC LIMIT 1;"}
{"instruction": "모든 트랙 중에서 가장 많이 판매된 트랙 3개와 해당 판매량은?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "지난 달 가장 많은 매출을 올린 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice WHERE InvoiceDate >= DATE('now', 'start of month', '-1 month') AND InvoiceDate < DATE('now', 'start of month') GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "어떤 아티스트의 앨범이 전체적으로 가장 많은 트랙을 포함하고 있나요?", "response": "SELECT Artist.Name, SUM(COUNT(Track.TrackId)) OVER (PARTITION BY Album.AlbumId) AS TotalTracks FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY TotalTracks DESC LIMIT 1;"}
{"instruction": "모든 트랙 중 가장 긴 실행 시간을 가진 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) AS MaxDuration FROM Track;"}
{"instruction": "지난 달에 가장 많은 매출을 기록한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS Total FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Customer.CustomerId ORDER BY Total DESC LIMIT 1;"}
{"instruction": "어떤 장르가 가장 적은 트랙을 가지고 있나요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TrackCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY TrackCount ASC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 구매한 국가는 어디인가요?", "response": "SELECT Invoice.BillingCountry, COUNT(DISTINCT Album.AlbumId) AS AlbumCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 출시된 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM Album ORDER BY Album.ReleaseDate DESC LIMIT 1;"}
{"instruction": "최근 3개월 동안 가장 많이 판매된 트랙 5개의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-3 months') GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 5;"}
{"instruction": "모든 고객 중에서 가장 나이가 많은 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer ORDER BY Customer.BirthDate ASC LIMIT 1;"}
{"instruction": "가장 많은 장르를 다루는 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "지난 해에 가장 많이 재생된 트랙은 무엇인가요?", "response": "SELECT Track.Name, COUNT(PlaylistTrack.TrackId) AS PlayCount FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId WHERE strftime('%Y', PlaylistTrack.PlaylistDate) = strftime('%Y', 'now', '-1 year') GROUP BY PlaylistTrack.TrackId ORDER BY PlayCount DESC LIMIT 1;"}
{"instruction": "모든 인보이스에서 가장 자주 등장하는 결제 국가는 어디인가요?", "response": "SELECT BillingCountry, COUNT(*) AS Count FROM Invoice GROUP BY BillingCountry ORDER BY Count DESC LIMIT 1;"}
{"instruction": "전체 고객 중에서 가장 최근에 생일을 맞은 고객은 누구인가요?", "response": "SELECT FirstName, LastName FROM Customer WHERE BirthDate = (SELECT MAX(BirthDate) FROM Customer WHERE BirthDate < DATE('now'));"}
{"instruction": "가장 많이 판매된 트랙의 장르와 해당 판매량은?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "가장 높은 매출을 기록한 인보이스의 ID와 총액은?", "response": "SELECT InvoiceId, Total FROM Invoice ORDER BY Total DESC LIMIT 1;"}
{"instruction": "지난 달 가장 많은 매출을 올린 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Artist.ArtistId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 발매한 년도는 언제인가요?", "response": "SELECT strftime('%Y', ReleaseDate) AS Year, COUNT(*) AS AlbumCount FROM Album GROUP BY Year ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "현재까지 판매된 모든 트랙의 총 길이는 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "각 아티스트별로 가장 비싼 트랙의 가격은?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS HighestPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY HighestPrice DESC;"}
{"instruction": "가장 최근에 구매된 트랙 10개는 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 10;"}
{"instruction": "모든 트랙 중 가장 최근에 출시된 트랙은 무엇인가요?", "response": "SELECT Name FROM Track ORDER BY ReleaseDate DESC LIMIT 1;"}
{"instruction": "가장 많은 고객을 보유한 도시와 해당 도시의 고객 수는?", "response": "SELECT City, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY City ORDER BY NumberOfCustomers DESC LIMIT 1;"}
{"instruction": "가장 낮은 가격의 트랙 5개의 제목과 가격은?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice ASC LIMIT 5;"}
{"instruction": "지난 달 가장 많이 구매된 앨범 3개의 이름과 판매량은?", "response": "SELECT Album.Title, COUNT(*) AS Sales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Album.AlbumId ORDER BY Sales DESC LIMIT 3;"}
{"instruction": "모든 인보이스 중 가장 적은 금액의 인보이스는?", "response": "SELECT InvoiceId, MIN(Total) AS MinTotal FROM Invoice;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙은 무엇인가요?", "response": "SELECT Track.Name, COUNT(PlaylistTrack.PlaylistId) AS PlaylistCount FROM PlaylistTrack JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY PlaylistCount DESC LIMIT 1;"}
{"instruction": "가장 긴 재생 시간을 가진 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(Track.Milliseconds) AS TotalDuration FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TotalDuration DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 장르와 해당 장르의 총 판매량은?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 인보이스 총액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AvgInvoiceTotal FROM Invoice GROUP BY BillingCountry ORDER BY AvgInvoiceTotal DESC;"}
{"instruction": "가장 많은 트랙을 출시한 년도는 언제인가요?", "response": "SELECT strftime('%Y', Track.ReleaseDate) AS Year, COUNT(*) AS TrackCount FROM Track GROUP BY Year ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 리뷰가 등록된 트랙과 그 리뷰의 내용은?", "response": "SELECT Track.Name, Review.Content FROM Review JOIN Track ON Review.TrackId = Track.TrackId ORDER BY Review.ReviewDate DESC LIMIT 1;"}
{"instruction": "가장 긴 트랙의 제목과 재생 시간은?", "response": "SELECT Name, MAX(Milliseconds) / 60000.0 AS DurationInMinutes FROM Track;"}
{"instruction": "모든 고객을 연령대별로 분류하고 각 연령대별 고객 수는?", "response": "SELECT (strftime('%Y', 'now') - strftime('%Y', BirthDate)) / 10 * 10 AS AgeGroup, COUNT(*) AS Count FROM Customer GROUP BY AgeGroup;"}
{"instruction": "최소 5개 이상의 트랙이 판매된 앨범들의 이름과 판매된 트랙 수는?", "response": "SELECT Album.Title, COUNT(*) AS TracksSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId HAVING TracksSold >= 5;"}
{"instruction": "각 아티스트별로 평균 트랙 길이는 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000.0 AS AvgLengthInMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 비싼 앨범의 이름과 가격은?", "response": "SELECT Album.Title, SUM(Track.UnitPrice) AS TotalPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TotalPrice DESC LIMIT 1;"}
{"instruction": "모든 트랙 중 가장 짧은 트랙의 이름과 길이는?", "response": "SELECT Name, MIN(Milliseconds) / 1000.0 AS DurationInSeconds FROM Track;"}
{"instruction": "각 국가에서 가장 많이 구매한 장르는 무엇인가요?", "response": "WITH CountryGenreSales AS (SELECT Invoice.BillingCountry, Genre.Name, SUM(InvoiceLine.Quantity) AS Quantity FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.Name) SELECT BillingCountry, Name AS MostPopularGenre, MAX(Quantity) AS TotalSales FROM CountryGenreSales GROUP BY BillingCountry;"}
{"instruction": "지난 해에 가장 많이 팔린 앨범은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY Album.AlbumId ORDER BY QuantitySold DESC LIMIT 1;"}
{"instruction": "전체 인보이스 중 평균 금액보다 높은 인보이스의 수는?", "response": "SELECT COUNT(*) FROM Invoice WHERE Total > (SELECT AVG(Total) FROM Invoice);"}
{"instruction": "가장 많은 고객이 있는 국가 상위 3개는?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC LIMIT 3;"}
{"instruction": "모든 트랙의 평균 가격은?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 최근에 등록된 고객의 이름은?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY CustomerId DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 출시한 앨범 수는?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY NumberOfAlbums DESC;"}
{"instruction": "가장 많이 판매된 앨범의 이름은 무엇이며, 그 판매량은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 대한 총 매출은?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 최근 구매한 인보이스의 내용과 구매 날짜는?", "response": "SELECT InvoiceId, Total, InvoiceDate FROM Invoice ORDER BY InvoiceDate DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 비싼 트랙의 가격은?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS MaxPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많이 재생된 트랙의 이름과 재생 횟수는?", "response": "SELECT Track.Name, COUNT(*) AS PlayCount FROM PlaylistTrack JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY PlayCount DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중 앨범을 가장 많이 출시한 아티스트와 그 수는?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 포함된 총 트랙 수는?", "response": "SELECT SUM(Quantity) FROM InvoiceLine;"}
{"instruction": "가장 많이 구매된 앨범의 아티스트 이름은?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "전체 고객 중 이메일을 제공한 고객의 수는?", "response": "SELECT COUNT(*) FROM Customer WHERE Email IS NOT NULL;"}
{"instruction": "가장 높은 매출을 기록한 월은 언제인가요?", "response": "SELECT strftime('%Y-%m', InvoiceDate) AS Month, SUM(Total) FROM Invoice GROUP BY Month ORDER BY SUM(Total) DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "총 고객 수 대비 캐나다 고객의 비율은 얼마인가요?", "response": "SELECT (SELECT COUNT(*) FROM Customer WHERE Country = 'Canada') * 100.0 / COUNT(*) FROM Customer;"}
{"instruction": "모든 트랙 중에서 평균 길이보다 긴 트랙의 수는?", "response": "SELECT COUNT(*) FROM Track WHERE Milliseconds > (SELECT AVG(Milliseconds) FROM Track);"}
{"instruction": "가장 짧은 트랙의 길이보다 짧은 트랙은 몇 개인가요?", "response": "SELECT COUNT(*) FROM Track WHERE Milliseconds < (SELECT MIN(Milliseconds) FROM Track);"}
{"instruction": "매년 평균 매출액은 얼마인가요?", "response": "SELECT strftime('%Y', InvoiceDate) AS Year, AVG(Total) FROM Invoice GROUP BY Year;"}
{"instruction": "각 아티스트의 첫 앨범 발매 연도는?", "response": "SELECT Artist.Name, MIN(strftime('%Y', Album.ReleaseDate)) AS FirstReleaseYear FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 최근 구매된 트랙 5개의 이름은?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "각 국가별로 가장 인기 있는 장르는 무엇인가요?", "response": "WITH CountryGenre AS (SELECT Invoice.BillingCountry, Genre.Name, COUNT(*) AS GenreCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.Name) SELECT BillingCountry, Name AS PopularGenre FROM CountryGenre WHERE (BillingCountry, GenreCount) IN (SELECT BillingCountry, MAX(GenreCount) FROM CountryGenre GROUP BY BillingCountry);"}
{"instruction": "모든 고객이 지금까지 구매한 총 앨범 수는?", "response": "SELECT COUNT(DISTINCT AlbumId) FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId;"}
{"instruction": "장르별 평균 트랙 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AvgPrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "가장 많은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TrackCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 연령은 몇 살인가요?", "response": "SELECT AVG(strftime('%Y', 'now') - strftime('%Y', BirthDate)) FROM Customer;"}
{"instruction": "각 아티스트별로 평균 트랙 길이는 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000 AS AvgTrackLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "최근 5년간 매년 발매된 앨범 수는?", "response": "SELECT strftime('%Y', ReleaseDate) AS Year, COUNT(*) FROM Album WHERE ReleaseDate >= date('now', '-5 years') GROUP BY Year;"}
{"instruction": "각 고객별로 첫 구매 날짜는 언제인가요?", "response": "SELECT CustomerId, MIN(InvoiceDate) FROM Invoice GROUP BY CustomerId;"}
{"instruction": "가장 높은 가격의 트랙 10개의 이름과 가격은?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 10;"}
{"instruction": "가장 많이 팔린 트랙 3개의 장르는?", "response": "SELECT Genre.Name FROM (SELECT Track.GenreId, SUM(InvoiceLine.Quantity) AS QuantitySold FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.GenreId ORDER BY QuantitySold DESC LIMIT 3) AS TopGenres JOIN Genre ON TopGenres.GenreId = Genre.GenreId;"}
{"instruction": "각 아티스트가 발매한 앨범 수는?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "최근 1년간 각 국가별 매출 총액은?", "response": "SELECT BillingCountry, SUM(Total) FROM Invoice WHERE InvoiceDate >= DATE('now', '-1 year') GROUP BY BillingCountry;"}
{"instruction": "가장 많이 판매된 트랙의 장르는?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "고객별로 지출한 총 금액은?", "response": "SELECT CustomerId, SUM(Total) FROM Invoice GROUP BY CustomerId;"}
{"instruction": "가장 최근에 방문한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 많이 팔린 앨범은?", "response": "WITH CountrySales AS (SELECT Invoice.BillingCountry, Album.AlbumId, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry, Album.AlbumId) SELECT BillingCountry, AlbumId, MAX(QuantitySold) AS MaxSold FROM CountrySales GROUP BY BillingCountry;"}
{"instruction": "가장 비싼 트랙 5개의 아티스트는?", "response": "SELECT Artist.Name FROM Track JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId ORDER BY Track.UnitPrice DESC LIMIT 5;"}
{"instruction": "각 장르별로 가장 긴 트랙은?", "response": "SELECT Genre.Name, MAX(Track.Milliseconds) AS MaxDuration FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "모든 인보이스 중 평균 금액보다 높은 인보이스의 수는?", "response": "SELECT COUNT(*) FROM Invoice WHERE Total > (SELECT AVG(Total) FROM Invoice);"}
{"instruction": "각 아티스트의 마지막 앨범은 언제 발매되었나요?", "response": "SELECT Artist.Name, MAX(Album.ReleaseDate) AS LastRelease FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "각 고객의 마지막 구매 앨범은?", "response": "WITH LastPurchase AS (SELECT CustomerId, MAX(InvoiceDate) AS LastDate FROM Invoice GROUP BY CustomerId) SELECT Customer.FirstName, Customer.LastName, Album.Title FROM Customer JOIN LastPurchase ON Customer.CustomerId = LastPurchase.CustomerId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId WHERE Invoice.InvoiceDate = LastPurchase.LastDate;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은?", "response": "SELECT (SELECT SUM(Total) FROM Invoice WHERE BillingCountry = 'USA') * 100.0 / SUM(Total) FROM Invoice WHERE BillingCountry != 'USA';"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는?", "response": "WITH GenrePurchases AS (SELECT CustomerId, Genre.GenreId, COUNT(*) AS GenreCount FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY CustomerId, Genre.GenreId) SELECT CustomerId, GenreId, MAX(GenreCount) FROM GenrePurchases GROUP BY CustomerId;"}
{"instruction": "가장 많이 판매된 앨범은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY QuantitySold DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 가격은?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "각 국가에서 가장 많이 팔린 트랙의 이름은?", "response": "WITH CountryTopTrack AS (SELECT Invoice.BillingCountry, Track.TrackId, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry, Track.TrackId) SELECT BillingCountry, Track.Name FROM CountryTopTrack JOIN Track ON CountryTopTrack.TrackId = Track.TrackId WHERE (BillingCountry, QuantitySold) IN (SELECT BillingCountry, MAX(QuantitySold) FROM CountryTopTrack GROUP BY BillingCountry);"}
{"instruction": "모든 아티스트 중에서 가장 많은 트랙을 발매한 아티스트는?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TrackCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 앨범의 평균 트랙 길이는?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000 AS AvgLengthMinutes FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많이 방문한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY COUNT(Invoice.CustomerId) DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 인기 있는 장르는?", "response": "WITH CountryGenre AS (SELECT Invoice.BillingCountry, Genre.GenreId, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.GenreId) SELECT BillingCountry, Genre.Name FROM CountryGenre JOIN Genre ON CountryGenre.GenreId = Genre.GenreId WHERE (BillingCountry, TotalQuantity) IN (SELECT BillingCountry, MAX(TotalQuantity) FROM CountryGenre GROUP BY BillingCountry);"}
{"instruction": "가장 많이 팔린 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 고객별로 구매한 앨범 수는?", "response": "SELECT CustomerId, COUNT(DISTINCT Album.AlbumId) FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY CustomerId;"}
{"instruction": "각 장르별 총 판매량은?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId;"}
{"instruction": "고객별로 마지막 구매한 트랙은?", "response": "WITH LastPurchaseTrack AS (SELECT Invoice.CustomerId, MAX(InvoiceLine.InvoiceLineId) AS LastLineId FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.CustomerId) SELECT Customer.FirstName, Customer.LastName, Track.Name FROM Customer JOIN LastPurchaseTrack ON Customer.CustomerId = LastPurchaseTrack.CustomerId JOIN InvoiceLine ON LastPurchaseTrack.LastLineId = InvoiceLine.InvoiceLineId JOIN Track ON InvoiceLine.TrackId = Track.TrackId;"}
{"instruction": "각 앨범별 총 판매량은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많은 장르를 가진 아티스트는?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "최근 3년간 각 해의 총 매출은?", "response": "SELECT strftime('%Y', InvoiceDate) AS Year, SUM(Total) AS TotalSales FROM Invoice WHERE InvoiceDate >= date('now', '-3 years') GROUP BY Year;"}
{"instruction": "각 아티스트의 첫 앨범은 언제였나요?", "response": "SELECT Artist.Name, MIN(Album.ReleaseDate) AS FirstRelease FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 고객의 평균 구매 횟수는?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(*) AS PurchaseCount FROM Invoice GROUP BY CustomerId);"}
{"instruction": "최고 가격의 트랙 3개는?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 3;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT Name, MAX(Milliseconds) / 60000 AS MaxDurationMinutes FROM Track;"}
{"instruction": "각 고객별 평균 구매 금액은?", "response": "SELECT CustomerId, AVG(Total) FROM Invoice GROUP BY CustomerId;"}
{"instruction": "지난 달 가장 많이 팔린 트랙은?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId WHERE InvoiceDate BETWEEN DATE('now', 'start of month', '-1 month') AND DATE('now', 'start of month', '-1 day') GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은?", "response": "SELECT AVG(AlbumPrice) FROM (SELECT Album.AlbumId, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId);"}
{"instruction": "가장 인기 있는 장르 상위 5개는?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSold DESC LIMIT 5;"}
{"instruction": "각 국가에서 가장 많이 소비된 앨범은?", "response": "WITH CountryAlbumSales AS (SELECT Invoice.BillingCountry, Album.AlbumId, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry, Album.AlbumId) SELECT BillingCountry, AlbumId, MAX(QuantitySold) AS MaxSold FROM CountryAlbumSales GROUP BY BillingCountry;"}
{"instruction": "가장 많이 구매한 트랙 상위 10개는?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY QuantitySold DESC LIMIT 10;"}
{"instruction": "각 아티스트 별로 가장 비싼 트랙은?", "response": "WITH ArtistTrackPrice AS (SELECT Artist.ArtistId, Track.TrackId, Track.UnitPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId) SELECT Artist.Name, Track.Name, MAX(ArtistTrackPrice.UnitPrice) FROM ArtistTrackPrice JOIN Track ON ArtistTrackPrice.TrackId = Track.TrackId JOIN Artist ON ArtistTrackPrice.ArtistId = Artist.ArtistId GROUP BY ArtistTrackPrice.ArtistId;"}
{"instruction": "매년 고객별 평균 구매 금액은?", "response": "SELECT strftime('%Y', InvoiceDate) AS Year, CustomerId, AVG(Total) FROM Invoice GROUP BY Year, CustomerId;"}
{"instruction": "가장 최근에 구입한 앨범의 이름은?", "response": "SELECT Album.Title FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "모든 트랙 중 가장 많이 판매된 트랙의 이름과 판매량은?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중 가장 많은 장르를 커버한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "지난 해 각 달의 총 매출은?", "response": "SELECT strftime('%Y-%m', InvoiceDate) AS Month, SUM(Total) AS TotalSales FROM Invoice WHERE strftime('%Y', InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY Month;"}
{"instruction": "각 고객별 최근 구매 앨범은?", "response": "WITH LastPurchase AS (SELECT CustomerId, MAX(InvoiceDate) AS LastPurchaseDate FROM Invoice GROUP BY CustomerId) SELECT Customer.FirstName, Customer.LastName, Album.Title FROM LastPurchase JOIN Invoice ON LastPurchase.CustomerId = Invoice.CustomerId AND LastPurchase.LastPurchaseDate = Invoice.InvoiceDate JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId;"}
{"instruction": "각 아티스트의 평균 트랙 판매량은?", "response": "SELECT Artist.Name, AVG(Sales.QuantitySold) AS AvgQuantitySold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN (SELECT TrackId, SUM(Quantity) AS QuantitySold FROM InvoiceLine GROUP BY TrackId) AS Sales ON Track.TrackId = Sales.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 곡이 포함된 플레이리스트의 이름은?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "전체 앨범 중 가장 최근에 출시된 앨범은?", "response": "SELECT Title, MAX(ReleaseDate) FROM Album;"}
{"instruction": "모든 장르 중에서 가장 적게 판매된 장르는?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "고객별로 가장 많이 구매한 장르는?", "response": "WITH GenrePurchases AS (SELECT CustomerId, Genre.GenreId, COUNT(*) AS PurchaseCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY CustomerId, Genre.GenreId) SELECT CustomerId, GenreId, MAX(PurchaseCount) FROM GenrePurchases GROUP BY CustomerId;"}
{"instruction": "각 국가에서 가장 높은 매출을 올린 앨범은?", "response": "WITH CountryAlbumSales AS (SELECT Invoice.BillingCountry, Album.AlbumId, SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) AS Revenue FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry, Album.AlbumId) SELECT BillingCountry, AlbumId, MAX(Revenue) AS MaxRevenue FROM CountryAlbumSales GROUP BY BillingCountry;"}
{"instruction": "지난 달 각 아티스트별 총 매출은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Artist.ArtistId;"}
{"instruction": "전체 트랙 중에서 가장 많이 재생된 트랙의 재생 횟수는?", "response": "SELECT Track.Name, COUNT(PlaylistTrack.TrackId) AS PlayCount FROM PlaylistTrack JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY PlaylistTrack.TrackId ORDER BY PlayCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 구매된 트랙 3개의 제목과 구매일은?", "response": "SELECT Track.Name, Invoice.InvoiceDate FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 3;"}
{"instruction": "각 장르별 총 판매량 대비 평균 트랙 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 아티스트 별로 가장 최근에 출시한 트랙은?", "response": "SELECT Artist.Name, Track.Name AS LatestTrack, MAX(Track.ReleaseDate) FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "고객별 평균 구매 앨범 가격은 얼마인가요?", "response": "SELECT CustomerId, AVG(AlbumPrice) FROM (SELECT Invoice.CustomerId, Album.AlbumId, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS AlbumPrice FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.CustomerId, Album.AlbumId) GROUP BY CustomerId;"}
{"instruction": "지난 해 판매된 모든 트랙의 총 수는?", "response": "SELECT COUNT(*) FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now', '-1 year');"}
{"instruction": "각 앨범별 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000 AS AverageDuration FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "모든 인보이스 중 최대 금액과 최소 금액의 차이는?", "response": "SELECT MAX(Total) - MIN(Total) FROM Invoice;"}
{"instruction": "가장 많은 플레이리스트 항목을 가진 플레이리스트는?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.PlaylistId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 비싼 트랙 가격은?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS HighestPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "지난 달에 출시된 트랙 수는?", "response": "SELECT COUNT(*) FROM Track WHERE strftime('%Y-%m', ReleaseDate) = strftime('%Y-%m', 'now', '-1 month');"}
{"instruction": "모든 트랙 중 가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestDurationInSeconds FROM Track;"}
{"instruction": "각 국가별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country;"}
{"instruction": "가장 많은 장르의 트랙을 보유한 앨범은?", "response": "SELECT Album.Title, Genre.Name, COUNT(Track.TrackId) AS NumberOfTracks FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Album.AlbumId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많이 팔린 앨범의 이름과 판매량은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 최근에 등록된 고객은 누구인가요?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY CustomerId DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 출시한 앨범 수는?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 플레이리스트의 총 트랙 수는?", "response": "SELECT SUM(NumberOfTracks) FROM (SELECT PlaylistId, COUNT(TrackId) AS NumberOfTracks FROM PlaylistTrack GROUP BY PlaylistId);"}
{"instruction": "가장 많은 언어로 제공되는 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(DISTINCT Track.Language) AS LanguageCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY LanguageCount DESC LIMIT 1;"}
{"instruction": "지난 해 각 아티스트의 총 판매량은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY Artist.ArtistId;"}
{"instruction": "모든 트랙 중 가장 최근에 출시된 트랙은 무엇인가요?", "response": "SELECT Name, MAX(ReleaseDate) AS ReleaseDate FROM Track;"}
{"instruction": "고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "WITH CustomerGenre AS (SELECT CustomerId, Genre.GenreId, COUNT(*) AS Count FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY CustomerId, Genre.GenreId) SELECT CustomerId, GenreId, MAX(Count) FROM CustomerGenre GROUP BY CustomerId;"}
{"instruction": "각 국가별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoice FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "가장 많이 구매된 트랙의 아티스트는 누구인가요?", "response": "SELECT Artist.Name, Track.Name, MAX(Sales) AS MaxSales FROM (SELECT Track.TrackId, SUM(InvoiceLine.Quantity) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId) JOIN Track ON Track.TrackId = Sales.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId GROUP BY Artist.ArtistId ORDER BY MaxSales DESC LIMIT 1;"}
{"instruction": "지난 달 총 매출은 얼마였나요?", "response": "SELECT SUM(Total) AS TotalSales FROM Invoice WHERE InvoiceDate BETWEEN DATE('now', 'start of month', '-1 month') AND DATE('now', 'start of month', '-1 day');"}
{"instruction": "가장 많은 곡을 포함한 플레이리스트의 이름은?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 앨범별 총 판매된 트랙 수는?", "response": "SELECT Album.Title, COUNT(*) AS TracksSold FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "각 아티스트 별로 가장 비싼 트랙의 가격은?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS HighestPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 앨범 중에서 평균 트랙 수가 가장 많은 앨범은?", "response": "SELECT Album.Title, AVG(TrackCount) AS AverageTracks FROM (SELECT Album.AlbumId, COUNT(*) AS TrackCount FROM Track JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Album.AlbumId) GROUP BY Album.AlbumId ORDER BY AverageTracks DESC LIMIT 1;"}
{"instruction": "지난 달 각 아티스트별 총 매출은?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Artist.ArtistId;"}
{"instruction": "고객별로 지난 해 가장 많이 구매한 장르는?", "response": "WITH GenrePurchases AS (SELECT Invoice.CustomerId, Genre.Name, COUNT(InvoiceLine.TrackId) AS PurchaseCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY Invoice.CustomerId, Genre.Name) SELECT CustomerId, Name AS FavoriteGenre FROM GenrePurchases WHERE PurchaseCount = (SELECT MAX(PurchaseCount) FROM GenrePurchases GP2 WHERE GP2.CustomerId = GenrePurchases.CustomerId) GROUP BY CustomerId;"}
{"instruction": "가장 비싼 앨범과 그 가격은?", "response": "SELECT Album.Title, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY AlbumPrice DESC LIMIT 1;"}
{"instruction": "가장 최근 구매된 트랙 5개와 그 가격은?", "response": "SELECT Track.Name, Track.UnitPrice FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "각 고객별로 첫 구매 날짜와 마지막 구매 날짜는?", "response": "SELECT CustomerId, MIN(InvoiceDate) AS FirstPurchase, MAX(InvoiceDate) AS LastPurchase FROM Invoice GROUP BY CustomerId;"}
{"instruction": "가장 많이 판매된 장르의 총 판매량은?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객의 총 매출액 대비 각 고객의 매출 비율은?", "response": "SELECT CustomerId, (SUM(Total) / (SELECT SUM(Total) FROM Invoice)) * 100 AS PercentageOfTotalSales FROM Invoice GROUP BY CustomerId;"}
{"instruction": "지난 해 가장 많이 판매된 트랙 3개는?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "각 앨범별 평균 트랙 길이는 몇 초인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 1000 AS AvgLengthSeconds FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "어떤 아티스트가 가장 많은 앨범을 출시했나요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 최근에 출시된 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(Album.ReleaseDate) AS LatestRelease FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(*) AS PurchaseCount FROM Invoice GROUP BY CustomerId) AS CustomerPurchases;"}
{"instruction": "가장 많은 트랙을 판매한 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalQuantity DESC LIMIT 1;"}
{"instruction": "각 국가에서 가장 인기 있는 장르는 무엇인가요?", "response": "WITH CountryGenreSales AS (SELECT Invoice.BillingCountry, Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.Name) SELECT BillingCountry, Name AS PopularGenre, MAX(TotalSales) FROM CountryGenreSales GROUP BY BillingCountry;"}
{"instruction": "각 고객별 평균 구매액은 얼마인가요?", "response": "SELECT CustomerId, AVG(Total) AS AveragePurchase FROM Invoice GROUP BY CustomerId;"}
{"instruction": "최근 1년간 가장 많이 판매된 상위 5개 앨범은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT Name, MAX(Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 얼마인가요?", "response": "SELECT (SUM(CASE WHEN MediaType.MediaTypeId = 1 THEN Total ELSE 0 END) / SUM(Total)) * 100 AS DigitalDownloadPercentage FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId;"}
{"instruction": "각 아티스트별로 출시한 앨범 수를 나열하세요.", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY NumberOfAlbums DESC;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC LIMIT 1;"}
{"instruction": "각 고객별 총 구매액은 얼마인가요?", "response": "SELECT CustomerId, SUM(Total) AS TotalSpent FROM Invoice GROUP BY CustomerId;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "가장 많이 팔린 트랙 3개와 그 판매량은?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY QuantitySold DESC LIMIT 3;"}
{"instruction": "가장 비싼 트랙 5개의 이름과 가격은?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 5;"}
{"instruction": "각 앨범에서 가장 비싼 트랙의 가격은?", "response": "SELECT Album.Title, MAX(Track.UnitPrice) AS MaxPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "지난 달에 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Album.AlbumId ORDER BY QuantitySold DESC LIMIT 1;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "WITH GenreSales AS (SELECT Invoice.CustomerId, Genre.Name, COUNT(*) AS Sales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.CustomerId, Genre.Name) SELECT CustomerId, Name AS FavoriteGenre FROM GenreSales WHERE Sales = (SELECT MAX(Sales) FROM GenreSales AS GS WHERE GS.CustomerId = GenreSales.CustomerId) GROUP BY CustomerId;"}
{"instruction": "가장 많이 팔린 앨범의 아티스트 이름과 앨범 제목은?", "response": "SELECT Artist.Name, Album.Title FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "어떤 고객이 가장 많은 금액을 지출했나요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "지난 해에 가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Invoice JOIN InvoiceLine ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON Track.TrackId = InvoiceLine.TrackId JOIN Genre ON Genre.GenreId = Track.GenreId WHERE strftime('%Y', Invoice.InvoiceDate) = strftime('%Y', 'now', '-1 year') GROUP BY Genre.GenreId ORDER BY QuantitySold DESC LIMIT 1;"}
{"instruction": "각 나라별 총 매출을 나열하세요.", "response": "SELECT BillingCountry, SUM(Total) AS CountryTotal FROM Invoice GROUP BY BillingCountry ORDER BY CountryTotal DESC;"}
{"instruction": "가장 많이 팔린 트랙의 이름과 그 트랙이 속한 앨범의 이름은?", "response": "SELECT Track.Name AS TrackName, Album.Title AS AlbumTitle FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 앨범 중에서 가장 많은 트랙을 가진 앨범은?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS TrackCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "최근 3개월 동안 가장 많은 매출을 기록한 상위 5개의 국가는?", "response": "SELECT BillingCountry, SUM(Total) AS Sales FROM Invoice WHERE InvoiceDate > DATE('now', '-3 months') GROUP BY BillingCountry ORDER BY Sales DESC LIMIT 5;"}
{"instruction": "가장 많이 구매된 상위 3개 아티스트의 이름과 판매량은?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "각 아티스트별로 평균 트랙 길이는 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000.0 AS AverageTrackLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "지난 달 가장 많이 팔린 장르의 이름은 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 연령은 몇 살인가요?", "response": "SELECT AVG(julianday('now') - julianday(Customer.BirthDate)) / 365.25 AS AverageAge FROM Customer;"}
{"instruction": "가장 많이 구매된 트랙의 컴포저는 누구인가요?", "response": "SELECT Track.Composer, SUM(InvoiceLine.Quantity) AS TotalSold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.Composer ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "지난 달 전체 매출액은 얼마였나요?", "response": "SELECT SUM(Total) AS TotalSales FROM Invoice WHERE strftime('%Y-%m', InvoiceDate) = strftime('%Y-%m', 'now', '-1 month');"}
{"instruction": "각 고객별로 가장 많이 구매한 앨범은 무엇인가요?", "response": "WITH CustomerAlbumSales AS (SELECT Invoice.CustomerId, Album.AlbumId, COUNT(*) AS Sales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.CustomerId, Album.AlbumId) SELECT CustomerId, AlbumId, MAX(Sales) FROM CustomerAlbumSales GROUP BY CustomerId;"}
{"instruction": "모든 아티스트의 총 앨범 판매량은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르를 포함하는 플레이리스트의 이름은?", "response": "SELECT Playlist.Name, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "지난 달 가장 많이 팔린 트랙 10개는 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId WHERE strftime('%Y-%m', Invoice.InvoiceDate) = strftime('%Y-%m', 'now', '-1 month') GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 10;"}
{"instruction": "각 고객별 총 구매 트랙 수는 몇 개인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(InvoiceLine.TrackId) AS TracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId;"}
{"instruction": "각 국가별 평균 트랙 가격은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Track.UnitPrice) AS AvgPrice FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY BillingCountry;"}
{"instruction": "가장 짧은 트랙과 그 길이는?", "response": "SELECT Name, MIN(Milliseconds) / 1000 AS DurationInSeconds FROM Track;"}
{"instruction": "모든 인보이스 중 가장 높은 금액의 인보이스와 그 금액은?", "response": "SELECT InvoiceId, MAX(Total) FROM Invoice;"}
{"instruction": "가장 최근에 등록된 트랙 5개와 그 등록일은?", "response": "SELECT Name, ReleaseDate FROM Track ORDER BY ReleaseDate DESC LIMIT 5;"}
{"instruction": "각 아티스트 별로 가장 짧은 트랙의 길이는?", "response": "SELECT Artist.Name, MIN(Track.Milliseconds) AS ShortestTrack FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 앨범 중 가장 최근에 출시된 앨범은?", "response": "SELECT Title, MAX(ReleaseDate) FROM Album;"}
{"instruction": "어떤 플레이리스트에 가장 많은 곡이 포함되어 있나요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "가장 최근에 구매한 상품의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "모든 앨범 중 가장 많은 장르가 포함된 앨범은?", "response": "SELECT Album.Title, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Album.AlbumId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액과 마지막 구매 날짜는?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent, MAX(Invoice.InvoiceDate) AS LastPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC;"}
{"instruction": "가장 긴 트랙의 이름과 재생 시간은?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 60000.0 AS MaxDurationMinutes FROM Track;"}
{"instruction": "각 국가별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageSale FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "최근 6개월 동안 가장 활발하게 구매한 상위 3명의 고객은?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(Invoice.InvoiceId) AS PurchaseCount FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.InvoiceDate >= DATE('now', '-6 months') GROUP BY Customer.CustomerId ORDER BY PurchaseCount DESC LIMIT 3;"}
{"instruction": "모든 트랙 중에서 가장 많이 재생된 트랙의 이름은?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 아티스트 별로 출시한 앨범 수는?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(CustomerId) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "2023년에 발행된 인보이스의 총 수는 몇 개인가요?", "response": "SELECT COUNT(InvoiceId) FROM Invoice WHERE strftime('%Y', InvoiceDate) = '2023';"}
{"instruction": "가장 많은 장르의 트랙을 가진 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(DISTINCT Track.GenreId) AS GenreVariety FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY GenreVariety DESC LIMIT 1;"}
{"instruction": "각 아티스트가 판매한 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(InvoiceLine.TrackId) AS TracksSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TracksSold DESC;"}
{"instruction": "가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 고객별로 구매한 총 앨범 수는?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(DISTINCT InvoiceLine.InvoiceId) AS AlbumsPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId ORDER BY AlbumsPurchased DESC;"}
{"instruction": "가장 최근 구매된 트랙 5개는 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "모든 인보이스에서 평균적으로 몇 개의 트랙이 구매되었나요?", "response": "SELECT AVG(TrackCount) FROM (SELECT InvoiceId, COUNT(TrackId) AS TrackCount FROM InvoiceLine GROUP BY InvoiceId);"}
{"instruction": "가장 많이 방문한 웹사이트 페이지는 무엇인가요?", "response": "SELECT PageURL, COUNT(PageVisitId) AS VisitCount FROM WebPageVisits GROUP BY PageURL ORDER BY VisitCount DESC LIMIT 1;"}
{"instruction": "각 국가별 최대 구매액을 기록한 고객은 누구인가요?", "response": "SELECT Country, FirstName, LastName, MAX(TotalSpent) FROM (SELECT Customer.Country, Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId) GROUP BY Country;"}
{"instruction": "모든 아티스트의 수는 몇 명인가요?", "response": "SELECT COUNT(*) FROM Artist;"}
{"instruction": "가장 긴 트랙의 시간은 얼마나 되나요?", "response": "SELECT MAX(Milliseconds) FROM Track;"}
{"instruction": "모든 앨범에서 평균 트랙 수는 몇 개인가요?", "response": "SELECT AVG(TrackCount) FROM (SELECT AlbumId, COUNT(*) AS TrackCount FROM Track GROUP BY AlbumId);"}
{"instruction": "가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "최근 6개월 동안 판매된 앨범 수는 몇 개인가요?", "response": "SELECT COUNT(DISTINCT AlbumId) FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE InvoiceDate > DATE('now', '-6 months');"}
{"instruction": "가장 많은 장르를 보유한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 생성된 플레이리스트는 무엇인가요?", "response": "SELECT Name FROM Playlist ORDER BY PlaylistId DESC LIMIT 1;"}
{"instruction": "모든 고객을 대상으로 한 평균 할인율은 얼마인가요?", "response": "SELECT AVG(Discount) FROM Invoice;"}
{"instruction": "어떤 국가에서 가장 많은 인보이스가 발행되었나요?", "response": "SELECT BillingCountry, COUNT(*) AS InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 1;"}
{"instruction": "가장 짧은 트랙의 길이는 얼마인가요?", "response": "SELECT MIN(Milliseconds) FROM Track;"}
{"instruction": "각 국가별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country;"}
{"instruction": "모든 트랙에서 평균 파일 크기는 얼마인가요?", "response": "SELECT AVG(Bytes) FROM Track;"}
{"instruction": "총 인보이스 금액 중에서 할인을 받은 금액의 비율은 얼마인가요?", "response": "SELECT SUM(Total) * AVG(Discount) / SUM(Total) AS DiscountedRatio FROM Invoice;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 고객의 총 구매액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많이 구매된 앨범의 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 최근에 구매된 아이템은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 대한 평균 트랙 판매 가격은 얼마인가요?", "response": "SELECT AVG(InvoiceLine.UnitPrice) FROM InvoiceLine;"}
{"instruction": "가장 많이 사용된 결제 방식은 무엇인가요?", "response": "SELECT BillingCountry, COUNT(*) AS Count FROM Invoice GROUP BY BillingCountry ORDER BY Count DESC LIMIT 1;"}
{"instruction": "모든 트랙 중에서 무료로 제공되는 트랙의 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM Track WHERE UnitPrice = 0;"}
{"instruction": "어떤 아티스트의 앨범이 가장 많이 팔렸나요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "가장 최근 구매된 트랙 5개는 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "모든 고객 중에서 가장 많은 구매를 한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 1;"}
{"instruction": "가장 많이 팔린 트랙 3개의 평균 가격은 얼마인가요?", "response": "SELECT AVG(Track.UnitPrice) FROM (SELECT Track.UnitPrice FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3) AS TopSellingTracks;"}
{"instruction": "모든 앨범 중 가장 많은 트랙을 포함하고 있는 앨범은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "모든 트랙 중 가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS Seconds FROM Track;"}
{"instruction": "모든 인보이스 중에서 최대 금액은 얼마인가요?", "response": "SELECT MAX(Total) FROM Invoice;"}
{"instruction": "어떤 고객이 가장 많은 종류의 트랙을 구매했나요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 많이 재생된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Genre.GenreId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "총 몇 개의 플레이리스트가 있나요?", "response": "SELECT COUNT(*) FROM Playlist;"}
{"instruction": "가장 많은 곡이 포함된 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY COUNT(PlaylistTrack.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 최근에 추가된 트랙은 무엇인가요?", "response": "SELECT Name FROM Track ORDER BY TrackId DESC LIMIT 1;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 1000 / 3600 AS TotalHours FROM Track;"}
{"instruction": "가장 많은 앨범을 출시한 아티스트 상위 3명은 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 3;"}
{"instruction": "각 국가별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중 가장 많은 트랙을 제공하는 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 비싼 앨범의 가격은 얼마인가요?", "response": "SELECT Album.Title, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY AlbumPrice DESC LIMIT 1;"}
{"instruction": "가장 많은 언어로 노래가 제공되는 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Track.Composer) AS Languages FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY Languages DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 장르의 총 판매량은 얼마인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많은 고객이 있는 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 방문한 고객은 누구인가요?", "response": "SELECT FirstName, LastName FROM Customer ORDER BY SupportRepId DESC LIMIT 1;"}
{"instruction": "최근 1년간 가장 인기 있는 앨범 5개는 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate > DATE('now', '-1 year') GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 5;"}
{"instruction": "모든 트랙 중에서 중간 길이의 트랙은 얼마나 긴가요?", "response": "SELECT Milliseconds FROM Track ORDER BY Milliseconds LIMIT 1 OFFSET (SELECT COUNT(*) FROM Track) / 2;"}
{"instruction": "총 몇 개의 장르가 있나요?", "response": "SELECT COUNT(*) FROM Genre;"}
{"instruction": "모든 고객의 평균 나이는 몇 살인가요?", "response": "SELECT AVG(Year(CURRENT_DATE) - Year(BirthDate)) AS AverageAge FROM Customer;"}
{"instruction": "가장 많이 방문한 플레이리스트는 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY COUNT(PlaylistTrack.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 적은 트랙을 가진 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) ASC LIMIT 1;"}
{"instruction": "각 아티스트별로 제공된 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TrackCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 수익이 가장 높은 상위 5개의 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS Revenue FROM Invoice GROUP BY BillingCountry ORDER BY Revenue DESC LIMIT 5;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 1000 / 60 AS LongestTrackMinutes FROM Track;"}
{"instruction": "가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "가장 최근에 추가된 앨범은 무엇인가요?", "response": "SELECT Title FROM Album ORDER BY AlbumId DESC LIMIT 1;"}
{"instruction": "총 몇 명의 아티스트가 앨범을 출시했나요?", "response": "SELECT COUNT(DISTINCT ArtistId) FROM Album;"}
{"instruction": "가장 많은 앨범을 출시한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Genre.GenreId ORDER BY COUNT(DISTINCT Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "총 판매량이 가장 높은 트랙 3개는 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3;"}
{"instruction": "가장 낮은 평가를 받은 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM Track ORDER BY Track.Rating ASC LIMIT 1;"}
{"instruction": "각 국가별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country;"}
{"instruction": "가장 많은 노래를 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY COUNT(InvoiceLine.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 많이 팔린 앨범의 총 판매량은 얼마인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "총 몇 개의 플레이리스트가 있나요?", "response": "SELECT COUNT(*) FROM Playlist;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 비싼 트랙 5개의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM (SELECT UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 5);"}
{"instruction": "가장 많이 재생된 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Artist.ArtistId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "모든 고객의 총 구매 금액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많은 장르를 제공하는 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "최근 6개월간 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate > DATE('now', '-6 month') GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 앨범 중에서 가장 많은 트랙을 가진 앨범은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 최근 구매가 이루어진 날짜는 언제인가요?", "response": "SELECT MAX(InvoiceDate) FROM Invoice;"}
{"instruction": "각 아티스트별로 출시한 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC;"}
{"instruction": "전체 트랙 중 가장 많이 판매된 장르의 비율은 얼마인가요?", "response": "SELECT Genre.Name, ROUND(SUM(InvoiceLine.Quantity) * 100.0 / (SELECT SUM(Quantity) FROM InvoiceLine), 2) AS Percentage FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 많이 사용된 결제 방법은 무엇인가요?", "response": "SELECT BillingCountry, COUNT(*) AS Count FROM Invoice GROUP BY BillingCountry ORDER BY Count DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 구매 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AvgPurchase FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "가장 많이 구매된 상품의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC;"}
{"instruction": "가장 많이 판매된 앨범의 이름과 그 앨범의 총 판매 수량은?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalQuantity DESC LIMIT 1;"}
{"instruction": "총 몇 개의 고유 플레이리스트가 있나요?", "response": "SELECT COUNT(DISTINCT PlaylistId) FROM PlaylistTrack;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 1000 / 60 / 60 AS TotalHours FROM Track;"}
{"instruction": "가장 많이 구매한 국가의 상위 3명 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE BillingCountry = (SELECT BillingCountry FROM Invoice GROUP BY BillingCountry ORDER BY SUM(Total) DESC LIMIT 1) GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 3;"}
{"instruction": "모든 아티스트 중에서 가장 많은 트랙을 보유한 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "각 앨범에 대한 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 1000 / 60 AS AverageLength FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "전체 고객 중에서 가장 많은 구매를 한 상위 5명의 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 5;"}
{"instruction": "모든 트랙 중에서 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestLength FROM Track;"}
{"instruction": "가장 많은 트랙을 구매한 상위 3개 국가는 어디인가요?", "response": "SELECT BillingCountry FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY BillingCountry ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 1000 / 60 AS LongestTrackMinutes FROM Track;"}
{"instruction": "모든 고객의 평균 나이는 몇 살인가요?", "response": "SELECT AVG(AGE) FROM Customer;"}
{"instruction": "총 판매량 기준 상위 5개 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 5;"}
{"instruction": "각 아티스트별로 제공하는 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 1000 / 60 AS AverageTrackLength FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "전체 트랙에서 가장 많이 팔린 장르의 이름은 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 최근에 구매한 트랙 5개의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "모든 앨범 중 가장 높은 가격의 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM Track ORDER BY Track.UnitPrice DESC LIMIT 1;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC LIMIT 1;"}
{"instruction": "각 국가에서 가장 많이 판매된 트랙은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Track.Name, MAX(InvoiceLine.Quantity) AS MaxSold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많은 장르를 포함하는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Playlist.PlaylistId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "전체 트랙 중에서 가장 많이 재생된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 출시한 아티스트의 이름은 무엇인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(Track.UnitPrice) FROM Track JOIN Album ON Track.AlbumId = Album.AlbumId;"}
{"instruction": "각 아티스트별로 출시한 앨범의 평균 가격은 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 수익을 낸 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "가장 인기 있는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY COUNT(PlaylistTrack.TrackId) DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 많이 판매된 앨범의 이름은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Album.Title, MAX(InvoiceLine.Quantity) AS MaxSold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry;"}
{"instruction": "전체 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "가장 긴 트랙과 가장 짧은 트랙의 길이 차이는 몇 초인가요?", "response": "SELECT MAX(Milliseconds) - MIN(Milliseconds) AS Difference FROM Track;"}
{"instruction": "모든 고객이 지출한 총 금액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많은 앨범을 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 가장 높은 평균 가격의 트랙을 제공하는 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY AVG(Track.UnitPrice) DESC LIMIT 1;"}
{"instruction": "가장 많이 팔린 트랙 3개의 총 판매 수량은 몇 개인가요?", "response": "SELECT SUM(TopSelling.Quantity) FROM (SELECT InvoiceLine.Quantity FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3) AS TopSelling;"}
{"instruction": "가장 인기 있는 장르는 무엇이며, 그 장르의 트랙은 총 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TotalTracks FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.GenreId = (SELECT GenreId FROM (SELECT GenreId, SUM(InvoiceLine.Quantity) AS TotalSold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY GenreId ORDER BY TotalSold DESC LIMIT 1) AS TopGenre) GROUP BY Genre.GenreId;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(Count) FROM (SELECT COUNT(*) AS Count FROM Invoice GROUP BY CustomerId) AS PurchaseCount;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "가장 많은 수익을 낸 아티스트는 누구이며, 그 수익은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 구매 금액과 평균 구매 횟수는 어떻게 되나요?", "response": "SELECT BillingCountry, AVG(Total) AS AvgPurchaseAmount, AVG(PurchaseCount) AS AvgPurchaseCount FROM (SELECT Invoice.BillingCountry, Invoice.Total, COUNT(Invoice.InvoiceId) AS PurchaseCount FROM Invoice GROUP BY Invoice.CustomerId, Invoice.BillingCountry) GROUP BY BillingCountry;"}
{"instruction": "가장 많은 앨범을 출시한 레이블의 이름은 무엇인가요?", "response": "SELECT Label.Name FROM Label JOIN Album ON Label.LabelId = Album.LabelId GROUP BY Label.LabelId ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "가장 긴 재생 시간을 가진 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name, MAX(TotalDuration) AS LongestDuration FROM (SELECT Playlist.PlaylistId, Playlist.Name, SUM(Track.Milliseconds) AS TotalDuration FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId) AS PlaylistDuration GROUP BY PlaylistDuration.PlaylistId ORDER BY LongestDuration DESC LIMIT 1;"}
{"instruction": "전체 고객 중에서 가장 많은 금액을 지출한 고객 5명의 이름과 총 지출 금액은 어떻게 되나요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 5;"}
{"instruction": "모든 트랙 중에서 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestLength FROM Track;"}
{"instruction": "가장 많은 트랙을 구매한 상위 3개 국가는 어디인가요?", "response": "SELECT BillingCountry FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY BillingCountry ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 1000 / 60 AS LongestTrackMinutes FROM Track;"}
{"instruction": "모든 고객의 평균 나이는 몇 살인가요?", "response": "SELECT AVG(AGE) FROM Customer;"}
{"instruction": "총 판매량 기준 상위 5개 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 5;"}
{"instruction": "각 아티스트별로 제공하는 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 1000 / 60 AS AverageTrackLength FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "전체 트랙에서 가장 많이 팔린 장르의 이름은 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 최근에 구매한 트랙 5개의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "모든 앨범 중 가장 높은 가격의 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM Track ORDER BY Track.UnitPrice DESC LIMIT 1;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC LIMIT 1;"}
{"instruction": "각 국가에서 가장 많이 판매된 트랙은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Track.Name, MAX(InvoiceLine.Quantity) AS MaxSold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많은 장르를 포함하는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Playlist.PlaylistId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "전체 트랙 중에서 가장 많이 재생된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 출시한 아티스트의 이름은 무엇인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(Track.UnitPrice) FROM Track JOIN Album ON Track.AlbumId = Album.AlbumId;"}
{"instruction": "각 아티스트별로 출시한 앨범의 평균 가격은 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 수익을 낸 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "가장 인기 있는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY COUNT(PlaylistTrack.TrackId) DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 많이 판매된 앨범의 이름은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Album.Title, MAX(InvoiceLine.Quantity) AS MaxSold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry;"}
{"instruction": "전체 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "가장 긴 트랙과 가장 짧은 트랙의 길이 차이는 몇 초인가요?", "response": "SELECT MAX(Milliseconds) - MIN(Milliseconds) AS Difference FROM Track;"}
{"instruction": "모든 고객이 지출한 총 금액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많은 앨범을 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 가장 높은 평균 가격의 트랙을 제공하는 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY AVG(Track.UnitPrice) DESC LIMIT 1;"}
{"instruction": "가장 많이 팔린 트랙 3개의 총 판매 수량은 몇 개인가요?", "response": "SELECT SUM(TopSelling.Quantity) FROM (SELECT InvoiceLine.Quantity FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3) AS TopSelling;"}
{"instruction": "가장 인기 있는 장르는 무엇이며, 그 장르의 트랙은 총 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TotalTracks FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.GenreId = (SELECT GenreId FROM (SELECT GenreId, SUM(InvoiceLine.Quantity) AS TotalSold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY GenreId ORDER BY TotalSold DESC LIMIT 1) AS TopGenre) GROUP BY Genre.GenreId;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(Count) FROM (SELECT COUNT(*) AS Count FROM Invoice GROUP BY CustomerId) AS PurchaseCount;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "가장 많은 수익을 낸 아티스트는 누구이며, 그 수익은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 구매 금액과 평균 구매 횟수는 어떻게 되나요?", "response": "SELECT BillingCountry, AVG(Total) AS AvgPurchaseAmount, AVG(PurchaseCount) AS AvgPurchaseCount FROM (SELECT Invoice.BillingCountry, Invoice.Total, COUNT(Invoice.InvoiceId) AS PurchaseCount FROM Invoice GROUP BY Invoice.CustomerId, Invoice.BillingCountry) AS CountryPurchases GROUP BY BillingCountry;"}
{"instruction": "각 아티스트가 제공하는 트랙의 총 길이는 몇 시간인가요?", "response": "SELECT Artist.Name, SUM(Track.Milliseconds) / 1000 / 60 / 60 AS TotalHours FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "각 장르별로 제공되는 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "모든 앨범 중에서 가장 많은 트랙을 포함하는 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 많은 고객을 보유한 도시는 어디인가요?", "response": "SELECT City, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY City ORDER BY NumberOfCustomers DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 인기 있는 아티스트는 누구인가요?", "response": "SELECT Invoice.BillingCountry, Artist.Name, MAX(ArtistSales.TotalSales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId JOIN (SELECT Artist.ArtistId, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId) AS ArtistSales ON Artist.ArtistId = ArtistSales.ArtistId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많은 플레이리스트 트랙을 제공하는 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Artist.ArtistId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 1000 / 60 AS AverageLength FROM Track;"}
{"instruction": "전체 판매량 기준 상위 3개 아티스트의 이름은 무엇인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 3;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MAX(Milliseconds) FROM Track;"}
{"instruction": "각 아티스트가 제공하는 트랙의 총 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TotalTracks FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르를 포함하는 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Album.AlbumId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "전체 고객 중에서 가장 적은 금액을 지출한 고객의 이름과 총 지출 금액은 어떻게 되나요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) ASC LIMIT 1;"}
{"instruction": "가장 많은 트랙을 제공하는 장르의 이름은 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 짧은 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MIN(Milliseconds) / 1000 / 60 AS ShortestTrackMinutes FROM Track;"}
{"instruction": "가장 많이 팔린 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 많은 트랙이 팔린 해는 언제인가요?", "response": "SELECT strftime('%Y', Invoice.InvoiceDate) AS Year FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Year ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "전체 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "모든 고객이 평균적으로 지출한 금액은 얼마인가요?", "response": "SELECT AVG(Total) FROM Invoice;"}
{"instruction": "가장 많은 트랙을 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY COUNT(InvoiceLine.TrackId) DESC LIMIT 1;"}
{"instruction": "모든 아티스트가 제공하는 트랙의 총 수는 몇 개인가요?", "response": "SELECT COUNT(Track.TrackId) FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId;"}
{"instruction": "각 국가별로 제공되는 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.UnitPrice) AS AveragePrice FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 시간인가요?", "response": "SELECT MAX(Milliseconds) / 1000 / 60 / 60 AS LongestTrackHours FROM Track;"}
{"instruction": "가장 많은 앨범을 제공하는 아티스트의 이름은 무엇인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 플레이리스트에 포함된 트랙의 총 수는 몇 개인가요?", "response": "SELECT COUNT(PlaylistTrack.TrackId) FROM PlaylistTrack;"}
{"instruction": "각 도시별 평균 구매 금액은 얼마인가요?", "response": "SELECT Customer.City, AVG(Invoice.Total) AS AvgPurchaseAmount FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.City;"}
{"instruction": "가장 많은 트랙을 구매한 국가는 어디인가요?", "response": "SELECT Invoice.BillingCountry FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 많은 수익을 낸 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "전체 고객 중에서 가장 많은 금액을 지출한 고객의 이름과 총 지출 금액은 어떻게 되나요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 1;"}
{"instruction": "가장 많은 장르를 포함하는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Playlist.PlaylistId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "각 장르별로 제공되는 트랙의 총 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TotalTracks FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 아티스트별로 제공되는 앨범의 총 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS TotalAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Milliseconds) FROM Track;"}
{"instruction": "각 플레이리스트에 포함된 트랙의 총 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TotalTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId;"}
{"instruction": "모든 트랙의 총 길이는 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 1000 / 60 / 60 AS TotalHours FROM Track;"}
{"instruction": "가장 많이 판매된 장르의 이름은 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 많이 지출한 고객의 이름과 총 지출 금액은 어떻게 되나요?", "response": "SELECT Invoice.BillingCountry, Customer.FirstName, Customer.LastName, MAX(CustomerSpending.TotalSpent) AS MaxSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN (SELECT CustomerId, SUM(Total) AS TotalSpent FROM Invoice GROUP BY CustomerId) AS CustomerSpending ON Customer.CustomerId = CustomerSpending.CustomerId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "전체 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "가장 많은 트랙을 제공하는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY COUNT(PlaylistTrack.TrackId) DESC LIMIT 1;"}
{"instruction": "각 도시별로 가장 많이 지출한 고객의 이름과 총 지출 금액은 어떻게 되나요?", "response": "SELECT Customer.City, Customer.FirstName, Customer.LastName, MAX(CustomerSpending.TotalSpent) AS MaxSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN (SELECT CustomerId, SUM(Total) AS TotalSpent FROM Invoice GROUP BY CustomerId) AS CustomerSpending ON Customer.CustomerId = CustomerSpending.CustomerId GROUP BY Customer.City;"}
{"instruction": "가장 많은 앨범을 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(*) AS PurchaseCount FROM Invoice GROUP BY CustomerId);"}
{"instruction": "각 국가별 평균 구매 횟수는 몇 번인가요?", "response": "SELECT BillingCountry, AVG(PurchaseCount) FROM (SELECT Invoice.BillingCountry, Customer.CustomerId, COUNT(*) AS PurchaseCount FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId, Invoice.BillingCountry) GROUP BY BillingCountry;"}
{"instruction": "가장 많이 구매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(AlbumPrice) FROM (SELECT Album.AlbumId, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId);"}
{"instruction": "가장 많은 트랙을 판매한 아티스트의 이름은 무엇인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 고객의 총 지출 금액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 인기 있는 플레이리스트의 트랙 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000 AS AverageLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르의 트랙을 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Genre.GenreId) DESC LIMIT 1;"}
{"instruction": "각 앨범별 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000 AS AverageLengthMinutes FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 비싼 앨범의 가격은 얼마인가요?", "response": "SELECT Album.Title, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY AlbumPrice DESC LIMIT 1;"}
{"instruction": "각 고객별로 구매한 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, AVG(InvoiceLine.UnitPrice) AS AverageTrackPrice FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 트랙을 구매한 장르는 어떤 고객에 의해 구매되었나요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Customer.CustomerId, Genre.GenreId ORDER BY COUNT(InvoiceLine.TrackId) DESC LIMIT 1;"}
{"instruction": "모든 아티스트가 제공하는 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(Track.UnitPrice) FROM Track JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId;"}
{"instruction": "가장 많은 트랙을 보유한 장르의 이름은 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "가장 높은 수익을 낸 트랙은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS Revenue FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY Revenue DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.Milliseconds) / 60000 AS AverageTrackLengthMinutes FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많이 팔린 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 플레이리스트에서 가장 많이 재생된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "전체 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "가장 많은 트랙을 제공하는 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY COUNT(PlaylistTrack.TrackId) DESC LIMIT 1;"}
{"instruction": "각 도시별로 가장 많이 지출한 고객의 이름과 총 지출 금액은 어떻게 되나요?", "response": "SELECT Customer.City, Customer.FirstName, Customer.LastName, MAX(CustomerSpending.TotalSpent) AS MaxSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN (SELECT CustomerId, SUM(Total) AS TotalSpent FROM Invoice GROUP BY CustomerId) AS CustomerSpending ON Customer.CustomerId = CustomerSpending.CustomerId GROUP BY Customer.City;"}
{"instruction": "가장 많은 앨범을 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId ORDER BY COUNT(DISTINCT Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(*) AS PurchaseCount FROM Invoice GROUP BY CustomerId);"}
{"instruction": "각 아티스트별로 판매된 총 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(*) AS TotalTracksSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 인보이스에서 가장 많이 판매된 트랙의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 앨범은 어느 아티스트의 앨범인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 적게 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) ASC LIMIT 1;"}
{"instruction": "모든 인보이스에 대해, 각 나라별 총 매출은 얼마인가요?", "response": "SELECT BillingCountry, SUM(Total) AS CountryTotalSales FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "총 판매량이 가장 많은 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS TotalCustomers FROM Customer GROUP BY Country ORDER BY TotalCustomers DESC LIMIT 1;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 60000.0 AS LongestTrackMinutes FROM Track;"}
{"instruction": "각 장르별로 제공된 트랙의 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TotalTracks FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "총 매출이 가장 높은 상위 3개의 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "각 고객별로 첫 구매 날짜는 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MIN(InvoiceDate) AS FirstPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 수의 플레이리스트에 포함된 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY COUNT(PlaylistTrack.PlaylistId) DESC LIMIT 1;"}
{"instruction": "각 플레이리스트에 포함된 트랙 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 최근에 구매한 인보이스의 날짜는 언제인가요?", "response": "SELECT MAX(InvoiceDate) FROM Invoice;"}
{"instruction": "각 아티스트의 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(*) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 많이 구매된 상위 5개 트랙의 이름과 판매량은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY QuantitySold DESC LIMIT 5;"}
{"instruction": "각 고객별로 마지막 구매 날짜는 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MAX(InvoiceDate) AS LastPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "각 아티스트별로 총 매출액은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "각 나라별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceAmount FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "모든 인보이스에서의 총 매출은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "각 고객별 총 지출액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 고객을 가진 도시는 어디인가요?", "response": "SELECT City, COUNT(*) AS TotalCustomers FROM Customer GROUP BY City ORDER BY TotalCustomers DESC LIMIT 1;"}
{"instruction": "각 도시별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCity, AVG(Total) AS AverageInvoiceAmount FROM Invoice GROUP BY BillingCity;"}
{"instruction": "가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000.0 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "각 인보이스에 포함된 트랙 수는 몇 개인가요?", "response": "SELECT InvoiceId, COUNT(*) AS NumberOfTracks FROM InvoiceLine GROUP BY InvoiceId;"}
{"instruction": "가장 많은 트랙을 판매한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "총 판매된 앨범 수는 몇 개인가요?", "response": "SELECT COUNT(DISTINCT AlbumId) FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId;"}
{"instruction": "가장 최근에 추가된 트랙은 무엇인가요?", "response": "SELECT Name FROM Track ORDER BY TrackId DESC LIMIT 1;"}
{"instruction": "각 아티스트별 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "각 장르별 트랙 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS NumberOfTracks FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "최소 구매 금액이 있는 인보이스는 몇 개인가요?", "response": "SELECT COUNT(*) FROM Invoice WHERE Total > 0;"}
{"instruction": "가장 많이 구매한 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 년도별 총 매출은 얼마인가요?", "response": "SELECT strftime('%Y', InvoiceDate) AS Year, SUM(Total) AS TotalSales FROM Invoice GROUP BY Year;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 60000.0 AS LongestTrackMinutes FROM Track;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(Quantity) AS MaxPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 최근 구매한 인보이스의 날짜는 언제인가요?", "response": "SELECT MAX(InvoiceDate) FROM Invoice;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "각 국가별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country;"}
{"instruction": "각 미디어 타입별 트랙 수는 몇 개인가요?", "response": "SELECT MediaType.Name, COUNT(Track.TrackId) AS NumberOfTracks FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId;"}
{"instruction": "총 인보이스 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM Invoice;"}
{"instruction": "각 플레이리스트에서의 트랙 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 많은 트랙이 포함된 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS NumberOfTracks FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 평균 트랙 길이(초)는 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 1000.0 AS AverageTrackLengthSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 고객 수는 몇 명인가요?", "response": "SELECT COUNT(*) FROM Customer;"}
{"instruction": "가장 많은 앨범을 제작한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY NumberOfAlbums DESC LIMIT 1;"}
{"instruction": "총 트랙 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM Track;"}
{"instruction": "각 고객별 평균 구매 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, AVG(Invoice.Total) AS AveragePurchase FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 트랙을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(InvoiceLine.InvoiceLineId) AS TotalPurchases FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY TotalPurchases DESC LIMIT 1;"}
{"instruction": "각 장르별 총 매출은 얼마인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId;"}
{"instruction": "각 년도별 판매된 앨범 수는 몇 개인가요?", "response": "SELECT strftime('%Y', InvoiceDate) AS Year, COUNT(DISTINCT AlbumId) FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Year;"}
{"instruction": "가장 많이 판매된 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "가장 최근에 출시된 앨범은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId ORDER BY Track.ReleaseDate DESC LIMIT 1;"}
{"instruction": "각 플레이리스트별 총 재생 시간(초)은 얼마인가요?", "response": "SELECT Playlist.Name, SUM(Track.Milliseconds) / 1000.0 AS TotalPlaybackTime FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "최소 구매 금액이 5달러 이상인 인보이스는 몇 개인가요?", "response": "SELECT COUNT(*) FROM Invoice WHERE Total >= 5;"}
{"instruction": "가장 많은 장르를 보유한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS NumberOfGenres FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY NumberOfGenres DESC LIMIT 1;"}
{"instruction": "각 인보이스별 평균 트랙 가격은 얼마인가요?", "response": "SELECT InvoiceId, AVG(InvoiceLine.UnitPrice) AS AveragePrice FROM InvoiceLine GROUP BY InvoiceId;"}
{"instruction": "가장 많이 사용된 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, COUNT(Track.TrackId) AS NumberOfTracks FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 제작한 트랙의 총 길이(초)는 얼마인가요?", "response": "SELECT Artist.Name, SUM(Track.Milliseconds) / 1000.0 AS TotalLengthSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 미디어 타입 수는 몇 개인가요?", "response": "SELECT COUNT(*) FROM MediaType;"}
{"instruction": "각 플레이리스트별 평균 트랙 길이(초)는 얼마인가요?", "response": "SELECT Playlist.Name, AVG(Track.Milliseconds) / 1000.0 AS AverageTrackLength FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 최근에 구매된 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "각 고객별로 구매한 총 트랙 길이(초)는 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Track.Milliseconds) / 1000.0 AS TotalLength FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 비싼 인보이스의 총 금액은 얼마인가요?", "response": "SELECT MAX(Total) FROM Invoice;"}
{"instruction": "각 국가별 인보이스 평균 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceAmount FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "각 아티스트별로 판매된 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(InvoiceLine.TrackId) AS TracksSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙은 무엇인가요?", "response": "SELECT Track.Name, COUNT(PlaylistTrack.PlaylistId) AS NumberOfPlaylists FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY NumberOfPlaylists DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 제공한 평균 트랙 가격은 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "어떤 장르의 트랙이 가장 긴 평균 재생 시간을 가지고 있나요?", "response": "SELECT Genre.Name, AVG(Track.Milliseconds) AS AverageDuration FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY AverageDuration DESC LIMIT 1;"}
{"instruction": "가장 최근에 추가된 앨범의 이름은 무엇인가요?", "response": "SELECT Title FROM Album ORDER BY ReleaseDate DESC LIMIT 1;"}
{"instruction": "가장 많은 곡이 포함된 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS NumberOfTracks FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "각 국가별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(CustomerId) AS NumberOfCustomers FROM Customer GROUP BY Country;"}
{"instruction": "가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "모든 인보이스의 평균 항목 수는 몇 개인가요?", "response": "SELECT AVG(ItemCount) FROM (SELECT InvoiceId, COUNT(*) AS ItemCount FROM InvoiceLine GROUP BY InvoiceId);"}
{"instruction": "가장 긴 재생 시간을 가진 트랙의 이름은 무엇인가요?", "response": "SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS MaxPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "각 장르별로 제공된 트랙 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TracksOffered FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "가장 많은 트랙을 제공한 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, COUNT(Track.TrackId) AS NumberOfTracks FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "가장 최근에 판매된 트랙 5개는 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 5;"}
{"instruction": "모든 인보이스에서 가장 많이 판매된 트랙은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "가장 비싼 트랙 5개의 이름과 가격은 무엇인가요?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 5;"}
{"instruction": "모든 고객의 총 구매액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많은 앨범을 생산한 아티스트 3명은 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY NumberOfAlbums DESC LIMIT 3;"}
{"instruction": "각 아티스트별로 제공한 평균 트랙 길이는 얼마나 되나요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000 AS AverageLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "각 국가별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.Country, Genre.Name, MAX(GenreCount) AS MostPurchased FROM (SELECT Invoice.CustomerId, InvoiceLine.GenreId, COUNT(*) AS GenreCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.CustomerId, InvoiceLine.GenreId) AS GenrePurchases JOIN Customer ON GenrePurchases.CustomerId = Customer.CustomerId JOIN Genre ON GenrePurchases.GenreId = Genre.GenreId GROUP BY Customer.Country;"}
{"instruction": "가장 많은 수익을 낸 국가는 어디인가요?", "response": "SELECT Country, SUM(Total) AS TotalRevenue FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Country ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 제공한 평균 트랙 가격은 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 곡을 작성한 작곡가는 누구인가요?", "response": "SELECT Composer, COUNT(*) AS NumberOfTracks FROM Track GROUP BY Composer ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "모든 앨범 중에서 평균 트랙 수가 가장 많은 아티스트는 누구인가요?", "response": "SELECT Artist.Name, AVG(TrackCount) AS AverageTracks FROM (SELECT Album.ArtistId, COUNT(Track.TrackId) AS TrackCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumTrackCount JOIN Artist ON AlbumTrackCount.ArtistId = Artist.ArtistId GROUP BY Artist.ArtistId ORDER BY AverageTracks DESC LIMIT 1;"}
{"instruction": "가장 비싼 앨범의 가격은 얼마인가요?", "response": "SELECT Album.Title, SUM(Track.UnitPrice) AS TotalPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TotalPrice DESC LIMIT 1;"}
{"instruction": "각 아티스트가 제공한 총 트랙 길이는 얼마나 되나요?", "response": "SELECT Artist.Name, SUM(Track.Milliseconds) / 60000 AS TotalLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "각 장르에서 가장 짧은 트랙의 길이는 얼마인가요?", "response": "SELECT Genre.Name, MIN(Track.Milliseconds) AS ShortestTrack FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 국가에서 구매한 총 앨범 수는 몇 개인가요?", "response": "SELECT Customer.Country, COUNT(DISTINCT InvoiceLine.AlbumId) AS AlbumsPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.Country;"}
{"instruction": "최근 1년간 가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Genre.GenreId ORDER BY TotalQuantity DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 가장 많은 앨범을 출시한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY NumberOfAlbums DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 짧은 트랙의 길이는 얼마인가요?", "response": "SELECT Artist.Name, MIN(Track.Milliseconds) AS ShortestTrackLength FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 트랙 중에서 가장 많이 판매된 트랙의 판매량은 얼마인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "모든 고객을 거래량에 따라 순위를 매겨주세요.", "response": "SELECT CustomerId, RANK() OVER (ORDER BY SUM(Total) DESC) AS CustomerRank FROM Invoice GROUP BY CustomerId;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.CustomerId, Genre.Name, MAX(GenreCount) AS MostPurchased FROM (SELECT Invoice.CustomerId, Track.GenreId, COUNT(*) AS GenreCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.CustomerId, Track.GenreId) AS PurchasedGenres JOIN Genre ON PurchasedGenres.GenreId = Genre.GenreId JOIN Customer ON PurchasedGenres.CustomerId = Customer.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "총 매출이 가장 높은 상위 5개 국가는 어디인가요?", "response": "SELECT Country, SUM(Total) AS TotalSales FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Country ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "각 앨범에서 가장 짧은 트랙의 길이는 얼마인가요?", "response": "SELECT Album.Title, MIN(Track.Milliseconds) AS ShortestTrackLength FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "각 아티스트별로 평균 앨범 가격은 얼마인가요?", "response": "SELECT Artist.Name, AVG(AlbumPrice) AS AverageAlbumPrice FROM (SELECT Album.ArtistId, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumPrices JOIN Artist ON AlbumPrices.ArtistId = Artist.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많이 구매된 상위 3개 트랙은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSold DESC LIMIT 3;"}
{"instruction": "모든 트랙 중 가장 최근에 출시된 트랙 5개는 무엇인가요?", "response": "SELECT Name, ReleaseDate FROM Track ORDER BY ReleaseDate DESC LIMIT 5;"}
{"instruction": "각 아티스트별로 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(AlbumSales.TotalSold) AS MaxSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN (SELECT AlbumId, SUM(InvoiceLine.Quantity) AS TotalSold FROM InvoiceLine GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 인기 있는 장르 상위 3개는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM Genre JOIN InvoiceLine ON Genre.GenreId = InvoiceLine.GenreId GROUP BY Genre.GenreId ORDER BY TotalQuantity DESC LIMIT 3;"}
{"instruction": "모든 고객 중에서 가장 많은 금액을 지출한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 트랙의 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(InvoiceId) AS PurchaseCount FROM Invoice GROUP BY CustomerId) AS Purchases;"}
{"instruction": "가장 많이 구매된 앨범은 무엇인가요?", "response": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 총 판매량은 몇 개인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 트랙을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(InvoiceLine.InvoiceId) AS TracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY TracksPurchased DESC LIMIT 1;"}
{"instruction": "각 플레이리스트별 총 트랙 재생 시간은 얼마인가요?", "response": "SELECT Playlist.Name, SUM(Track.Milliseconds) / 60000 AS TotalMinutes FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "최근 1년 동안 가장 많이 판매된 트랙 5개는 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity) AS QuantitySold FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Track.TrackId ORDER BY QuantitySold DESC LIMIT 5;"}
{"instruction": "각 국가별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceAmount FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "모든 아티스트 중에서 가장 높은 평균 가격의 트랙을 제공하는 아티스트는 누구인가요?", "response": "SELECT Artist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY AveragePrice DESC LIMIT 1;"}
{"instruction": "각 미디어 타입별 트랙 수는 몇 개인가요?", "response": "SELECT MediaType.Name, COUNT(*) AS NumberOfTracks FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId;"}
{"instruction": "가장 비싼 트랙을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId WHERE Track.UnitPrice = (SELECT MAX(UnitPrice) FROM Track) GROUP BY Customer.CustomerId;"}
{"instruction": "최근 6개월 동안 가장 많은 매출을 기록한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-6 month') GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Track;"}
{"instruction": "가장 많이 팔린 장르 상위 5개는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "가장 적게 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "각 아티스트의 첫 앨범 발매일은 언제인가요?", "response": "SELECT Artist.Name, MIN(Album.ReleaseDate) AS FirstReleaseDate FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르를 커버한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 긴 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "가장 짧은 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MIN(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "각 앨범에서 가장 많이 팔린 트랙은 무엇인가요?", "response": "SELECT Album.Title, Track.Name, MAX(InvoiceLine.Quantity) AS MaxSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "각 국가에서 가장 인기 있는 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, MAX(GenreSales.TotalSales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT BillingCountry, GenreId, SUM(Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY BillingCountry, GenreId) AS GenreSales ON Invoice.BillingCountry = GenreSales.BillingCountry AND Genre.GenreId = GenreSales.GenreId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 아티스트별로 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(AlbumSales.TotalSold) AS MaxSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN (SELECT AlbumId, SUM(InvoiceLine.Quantity) AS TotalSold FROM InvoiceLine GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.TotalPurchases) AS MostPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT CustomerId, GenreId, COUNT(*) AS TotalPurchases FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY CustomerId, GenreId) AS GenrePurchases ON Customer.CustomerId = GenrePurchases.CustomerId AND Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "각 아티스트가 제공한 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TracksOffered FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 인보이스 금액이 가장 높은 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 1;"}
{"instruction": "각 앨범에 포함된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Album.Title, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많은 앨범을 제공한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "각 고객별로 마지막 구매일은 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.InvoiceDate) AS LastPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "각 고객별로 첫 구매일은 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MIN(Invoice.InvoiceDate) AS FirstPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 몇 퍼센트인가요?", "response": "SELECT (SUM(CASE WHEN MediaType.Name LIKE '%Digital%' THEN InvoiceLine.UnitPrice * InvoiceLine.Quantity ELSE 0 END) / SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity)) * 100 AS DigitalSalesPercentage FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId;"}
{"instruction": "가장 높은 매출을 기록한 월은 언제인가요?", "response": "SELECT STRFTIME('%Y-%m', InvoiceDate) AS SalesMonth, SUM(Total) AS TotalSales FROM Invoice GROUP BY SalesMonth ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객을 거주 국가별로 분류한 후, 각 국가별 평균 매출은 얼마인가요?", "response": "SELECT Customer.Country, AVG(Invoice.Total) AS AverageSale FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.Country;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(AlbumPrice.AveragePrice) AS OverallAveragePrice FROM (SELECT Album.AlbumId, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumPrice;"}
{"instruction": "각 장르별로 제공된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 국가별로 제공된 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "최근 1년 동안 가장 많은 매출을 기록한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Track;"}
{"instruction": "가장 많이 팔린 장르 상위 5개는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "가장 적게 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "각 아티스트의 첫 앨범 발매일은 언제인가요?", "response": "SELECT Artist.Name, MIN(Album.ReleaseDate) AS FirstReleaseDate FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르를 커버한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 긴 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "가장 짧은 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MIN(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "각 앨범에서 가장 많이 팔린 트랙은 무엇인가요?", "response": "SELECT Album.Title, Track.Name, MAX(InvoiceLine.Quantity) AS MaxSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "각 국가에서 가장 인기 있는 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, MAX(GenreSales.TotalSales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT BillingCountry, GenreId, SUM(Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY BillingCountry, GenreId) AS GenreSales ON Invoice.BillingCountry = GenreSales.BillingCountry AND Genre.GenreId = GenreSales.GenreId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 아티스트별로 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(AlbumSales.TotalSold) AS MaxSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN (SELECT AlbumId, SUM(InvoiceLine.Quantity) AS TotalSold FROM InvoiceLine GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.TotalPurchases) AS MostPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT CustomerId, GenreId, COUNT(*) AS TotalPurchases FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY CustomerId, GenreId) AS GenrePurchases ON Customer.CustomerId = GenrePurchases.CustomerId AND Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "각 아티스트가 제공한 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TracksOffered FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 인보이스 금액이 가장 높은 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 1;"}
{"instruction": "각 앨범에 포함된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Album.Title, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많은 앨범을 제공한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "각 고객별로 마지막 구매일은 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.InvoiceDate) AS LastPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "각 고객별로 첫 구매일은 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MIN(Invoice.InvoiceDate) AS FirstPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 몇 퍼센트인가요?", "response": "SELECT (SUM(CASE WHEN MediaType.Name LIKE '%Digital%' THEN InvoiceLine.UnitPrice * InvoiceLine.Quantity ELSE 0 END) / SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity)) * 100 AS DigitalSalesPercentage FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId;"}
{"instruction": "가장 높은 매출을 기록한 월은 언제인가요?", "response": "SELECT STRFTIME('%Y-%m', InvoiceDate) AS SalesMonth, SUM(Total) AS TotalSales FROM Invoice GROUP BY SalesMonth ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객을 거주 국가별로 분류한 후, 각 국가별 평균 매출은 얼마인가요?", "response": "SELECT Customer.Country, AVG(Invoice.Total) AS AverageSale FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.Country;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(AlbumPrice.AveragePrice) AS OverallAveragePrice FROM (SELECT Album.AlbumId, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumPrice;"}
{"instruction": "각 장르별로 제공된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 국가별로 제공된 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "최근 1년 동안 가장 많은 매출을 기록한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Track;"}
{"instruction": "가장 많이 팔린 장르 상위 5개는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "가장 적게 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "각 아티스트의 첫 앨범 발매일은 언제인가요?", "response": "SELECT Artist.Name, MIN(Album.ReleaseDate) AS FirstReleaseDate FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르를 커버한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 긴 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "가장 짧은 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MIN(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "각 앨범에서 가장 많이 팔린 트랙은 무엇인가요?", "response": "SELECT Album.Title, Track.Name, MAX(InvoiceLine.Quantity) AS MaxSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "각 국가에서 가장 인기 있는 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, MAX(GenreSales.TotalSales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT BillingCountry, GenreId, SUM(Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY BillingCountry, GenreId) AS GenreSales ON Invoice.BillingCountry = GenreSales.BillingCountry AND Genre.GenreId = GenreSales.GenreId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 아티스트별로 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(AlbumSales.TotalSold) AS MaxSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN (SELECT AlbumId, SUM(InvoiceLine.Quantity) AS TotalSold FROM InvoiceLine GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.TotalPurchases) AS MostPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT CustomerId, GenreId, COUNT(*) AS TotalPurchases FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY CustomerId, GenreId) AS GenrePurchases ON Customer.CustomerId = GenrePurchases.CustomerId AND Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "각 아티스트가 제공한 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TracksOffered FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 인보이스 금액이 가장 높은 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY SUM(Invoice.Total) DESC LIMIT 1;"}
{"instruction": "각 앨범에 포함된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Album.Title, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많은 앨범을 제공한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "각 고객별로 마지막 구매일은 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.InvoiceDate) AS LastPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY COUNT(Track.TrackId) DESC LIMIT 1;"}
{"instruction": "각 고객별로 첫 구매일은 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MIN(Invoice.InvoiceDate) AS FirstPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 몇 퍼센트인가요?", "response": "SELECT (SUM(CASE WHEN MediaType.Name LIKE '%Digital%' THEN InvoiceLine.UnitPrice * InvoiceLine.Quantity ELSE 0 END) / SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity)) * 100 AS DigitalSalesPercentage FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId;"}
{"instruction": "가장 높은 매출을 기록한 월은 언제인가요?", "response": "SELECT STRFTIME('%Y-%m', InvoiceDate) AS SalesMonth, SUM(Total) AS TotalSales FROM Invoice GROUP BY SalesMonth ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객을 거주 국가별로 분류한 후, 각 국가별 평균 매출은 얼마인가요?", "response": "SELECT Customer.Country, AVG(Invoice.Total) AS AverageSale FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.Country;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(AlbumPrice.AveragePrice) AS OverallAveragePrice FROM (SELECT Album.AlbumId, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumPrice;"}
{"instruction": "각 장르별로 제공된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 국가별로 제공된 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "최근 1년 동안 가장 많은 매출을 기록한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Track;"}
{"instruction": "가장 많이 팔린 장르 상위 5개는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "가장 적게 판매된 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales ASC LIMIT 1;"}
{"instruction": "각 아티스트의 첫 앨범 발매일은 언제인가요?", "response": "SELECT Artist.Name, MIN(Album.ReleaseDate) AS FirstReleaseDate FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 장르를 커버한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Track.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 긴 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MAX(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "가장 짧은 트랙의 제목과 길이는?", "response": "SELECT Track.Name, MIN(Track.Milliseconds) / 60000.0 AS LengthInMinutes FROM Track;"}
{"instruction": "각 국가별 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.Milliseconds) / 60000.0 AS AverageTrackLength FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "모든 트랙의 총 길이를 시간으로 환산하면 얼마인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "각 장르별 트랙 수와 총 매출은 어떻게 되나요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS Tracks, SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId;"}
{"instruction": "가장 많은 매출을 기록한 트랙은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) AS TotalSales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 고객별로 구매한 앨범 수는 몇 개인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(DISTINCT Album.AlbumId) AS AlbumsPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 인기 있는 아티스트 상위 5명은 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 5;"}
{"instruction": "각 국가별로 가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, MAX(GenreSales.TotalSales) AS MostSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT BillingCountry, GenreId, SUM(Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY BillingCountry, GenreId) AS GenreSales ON Invoice.BillingCountry = GenreSales.BillingCountry AND Genre.GenreId = GenreSales.GenreId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 앨범별로 판매된 총 트랙 수는 몇 개인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalTracksSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많이 판매된 트랙의 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 아티스트별 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000.0 AS AverageTrackLength FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 매출 중 가장 비싼 트랙이 차지하는 비율은 몇 퍼센트인가요?", "response": "SELECT (MAX(Track.UnitPrice) / SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity)) * 100 AS HighestPricePercentage FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId;"}
{"instruction": "각 국가별 고객 수와 총 매출은 어떻게 되나요?", "response": "SELECT Customer.Country, COUNT(*) AS CustomerCount, SUM(Invoice.Total) AS TotalSales FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.Country;"}
{"instruction": "가장 짧은 앨범의 제목과 길이는?", "response": "SELECT Album.Title, MIN(AlbumLength.AlbumLengthMinutes) AS ShortestAlbumLength FROM Album JOIN (SELECT AlbumId, SUM(Milliseconds) / 60000.0 AS AlbumLengthMinutes FROM Track GROUP BY AlbumId) AS AlbumLength ON Album.AlbumId = AlbumLength.AlbumId;"}
{"instruction": "가장 긴 앨범의 제목과 길이는?", "response": "SELECT Album.Title, MAX(AlbumLength.AlbumLengthMinutes) AS LongestAlbumLength FROM Album JOIN (SELECT AlbumId, SUM(Milliseconds) / 60000.0 AS AlbumLengthMinutes FROM Track GROUP BY AlbumId) AS AlbumLength ON Album.AlbumId = AlbumLength.AlbumId;"}
{"instruction": "가장 많은 트랙을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(InvoiceLine.Quantity) AS TotalTracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY TotalTracksPurchased DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 구매 트랙 수는 몇 개인가요?", "response": "SELECT AVG(TotalPurchases) AS AveragePurchases FROM (SELECT CustomerId, SUM(InvoiceLine.Quantity) AS TotalPurchases FROM InvoiceLine GROUP BY CustomerId);"}
{"instruction": "가장 많이 사용된 결제 방법은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Invoice.PaymentMethod, COUNT(*) AS PaymentCount FROM Invoice GROUP BY Invoice.PaymentMethod ORDER BY PaymentCount DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 발매된 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumsReleased FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 앨범의 총 가격은 얼마인가요?", "response": "SELECT SUM(AlbumPrice.TotalPrice) AS TotalPrice FROM (SELECT Album.AlbumId, SUM(Track.UnitPrice) AS TotalPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumPrice;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.TotalPurchases) AS MostPurchases FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT CustomerId, GenreId, SUM(InvoiceLine.Quantity) AS TotalPurchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY CustomerId, GenreId) AS GenrePurchases ON Customer.CustomerId = GenrePurchases.CustomerId AND Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 앨범을 발매한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumsReleased FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumsReleased DESC LIMIT 1;"}
{"instruction": "가장 많은 트랙을 제공한 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(Track.TrackId) AS TracksProvided FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY TracksProvided DESC LIMIT 1;"}
{"instruction": "각 국가에서 가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Album.Title, MAX(AlbumSales.TotalSales) AS MostSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN (SELECT BillingCountry, AlbumId, SUM(Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY BillingCountry, AlbumId) AS AlbumSales ON Invoice.BillingCountry = AlbumSales.BillingCountry AND Album.AlbumId = AlbumSales.AlbumId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 아티스트별로 판매된 총 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalTracksSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "각 고객별로 지출한 평균 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, AVG(Invoice.Total) AS AverageSpending FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 트랙을 제공한 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS TracksProvided FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TracksProvided DESC LIMIT 1;"}
{"instruction": "각 국가별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Invoice.BillingCountry, SUM(Invoice.Total) AS TotalSpent FROM Invoice GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많은 매출을 기록한 국가는 어디인가요?", "response": "SELECT Invoice.BillingCountry, SUM(Invoice.Total) AS TotalSales FROM Invoice GROUP BY Invoice.BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 많이 판매된 아티스트는 누구인가요?", "response": "SELECT Invoice.BillingCountry, Artist.Name, MAX(ArtistSales.TotalSales) AS MostSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId JOIN (SELECT BillingCountry, ArtistId, SUM(Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY BillingCountry, ArtistId) AS ArtistSales ON Invoice.BillingCountry = ArtistSales.BillingCountry AND Artist.ArtistId = ArtistSales.ArtistId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많이 구매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "어떤 아티스트가 가장 많은 앨범을 출시했나요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "가장 최근에 청구된 인보이스는 언제였나요?", "response": "SELECT MAX(InvoiceDate) AS LatestInvoiceDate FROM Invoice;"}
{"instruction": "각 나라별 평균 인보이스 총액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AvgTotal FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "고객이 가장 많이 구매한 트랙 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TrackCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId GROUP BY Genre.Name ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "어떤 직원이 가장 많은 고객을 담당하고 있나요?", "response": "SELECT Employee.FirstName, Employee.LastName, COUNT(*) AS CustomerCount FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Employee.EmployeeId ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "가장 긴 시간의 트랙은 무엇인가요?", "response": "SELECT Name, MAX(Milliseconds) / 1000 AS Seconds FROM Track;"}
{"instruction": "각 아티스트별로 출시한 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "인보이스가 가장 많은 상위 5개 국가는 어디인가요?", "response": "SELECT BillingCountry, COUNT(*) AS InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 5;"}
{"instruction": "모든 고객의 평균 청구 금액은 얼마인가요?", "response": "SELECT AVG(Total) AS AverageInvoiceAmount FROM Invoice;"}
{"instruction": "가장 많이 팔린 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name, COUNT(*) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN InvoiceLine ON PlaylistTrack.TrackId = InvoiceLine.TrackId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 플레이리스트에 몇 개의 트랙이 포함되어 있나요?", "response": "SELECT Playlist.Name, COUNT(*) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS Sales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 대한 총액은 얼마인가요?", "response": "SELECT SUM(Total) AS TotalSales FROM Invoice;"}
{"instruction": "각 고객별로 지출한 총액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많이 사용된 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, COUNT(*) AS UsageCount FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId ORDER BY UsageCount DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 초인가요?", "response": "SELECT AVG(Milliseconds) / 1000 AS AverageLengthSeconds FROM Track;"}
{"instruction": "각 직원별로 담당한 고객 수는 몇 명인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, COUNT(*) AS CustomerCount FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Employee.EmployeeId;"}
{"instruction": "총 앨범 수는 몇 개인가요?", "response": "SELECT COUNT(*) AS TotalAlbums FROM Album;"}
{"instruction": "총 아티스트 수는 몇 명인가요?", "response": "SELECT COUNT(*) AS TotalArtists FROM Artist;"}
{"instruction": "가장 높은 청구액을 가진 인보이스는 얼마인가요?", "response": "SELECT MAX(Total) AS HighestInvoiceAmount FROM Invoice;"}
{"instruction": "각 나라별 고객 수는 몇 명인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country;"}
{"instruction": "가장 많은 트랙을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(*) AS TracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY TracksPurchased DESC LIMIT 1;"}
{"instruction": "각 앨범에서 가장 긴 트랙의 길이는 얼마인가요?", "response": "SELECT Album.Title, MAX(Track.Milliseconds) / 1000 AS LongestTrackSeconds FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(*) AS Sales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "가장 최근에 추가된 트랙은 무엇인가요?", "response": "SELECT Name FROM Track ORDER BY TrackId DESC LIMIT 1;"}
{"instruction": "각 직원이 담당하는 고객들의 평균 청구액은 얼마인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, AVG(Invoice.Total) AS AverageSale FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Employee.EmployeeId;"}
{"instruction": "각 아티스트의 평균 트랙 길이는 몇 초인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 1000 AS AverageTrackLengthSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "모든 트랙의 총 길이는 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 1000 / 3600 AS TotalHours FROM Track;"}
{"instruction": "각 장르별로 출시된 트랙 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TrackCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "각 미디어 타입별로 트랙 수는 몇 개인가요?", "response": "SELECT MediaType.Name, COUNT(*) AS TrackCount FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId;"}
{"instruction": "가장 많이 판매된 트랙 5개는 무엇인가요?", "response": "SELECT Track.Name, COUNT(*) AS Sales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY Sales DESC LIMIT 5;"}
{"instruction": "총 인보이스 수는 몇 개인가요?", "response": "SELECT COUNT(*) AS TotalInvoices FROM Invoice;"}
{"instruction": "가장 많은 수익을 낸 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS Revenue FROM Invoice GROUP BY BillingCountry ORDER BY Revenue DESC LIMIT 1;"}
{"instruction": "각 플레이리스트의 총 재생 시간은 얼마인가요?", "response": "SELECT Playlist.Name, SUM(Track.Milliseconds) / 1000 AS TotalSeconds FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 많은 트랙이 포함된 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "모든 고객의 총 구매액은 얼마인가요?", "response": "SELECT SUM(Invoice.Total) FROM Invoice;"}
{"instruction": "가장 많은 앨범을 출시한 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(Album.AlbumId) AS NumberOfAlbums FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Genre.GenreId ORDER BY NumberOfAlbums DESC LIMIT 1;"}
{"instruction": "각 고객별로 가장 많이 구매한 트랙의 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.Total) AS MaxPurchases FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT Track.GenreId, COUNT(*) AS Total FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.GenreId) AS GenrePurchases ON Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 최근에 구매한 트랙 3개의 이름은 무엇인가요?", "response": "SELECT Track.Name FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 3;"}
{"instruction": "각 아티스트별로 총 판매된 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(InvoiceLine.TrackId) AS TotalSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 트랙 중 가장 짧은 트랙의 재생 시간은 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "가장 비싼 트랙 3개의 이름과 가격은 무엇인가요?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 3;"}
{"instruction": "각 장르별 평균 트랙 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "가장 많은 트랙을 구매한 상위 5명의 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(InvoiceLine.TrackId) AS TracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY TracksPurchased DESC LIMIT 5;"}
{"instruction": "각 플레이리스트의 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Playlist.Name, AVG(Track.Milliseconds) / 60000 AS AverageTrackLengthMinutes FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 많은 앨범을 판매한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS AlbumsSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY AlbumsSold DESC LIMIT 1;"}
{"instruction": "각 국가별로 판매된 총 앨범 수는 몇 개인가요?", "response": "SELECT Invoice.BillingCountry, COUNT(DISTINCT Album.AlbumId) AS AlbumsSold FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 년도별로 발매된 트랙 수는 몇 개인가요?", "response": "SELECT strftime('%Y', datetime(Track.CompositionDate)) AS Year, COUNT(Track.TrackId) AS TracksReleased FROM Track GROUP BY Year;"}
{"instruction": "총 고객 수는 몇 명인가요?", "response": "SELECT COUNT(*) AS TotalCustomers FROM Customer;"}
{"instruction": "각 고객별로 지출한 총 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많이 방문한 도시는 어디인가요?", "response": "SELECT BillingCity, COUNT(*) AS Visits FROM Invoice GROUP BY BillingCity ORDER BY Visits DESC LIMIT 1;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 60000 AS LongestTrackMinutes FROM Track;"}
{"instruction": "각 고객별로 구매한 트랙의 장르를 나열하세요.", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Customer.CustomerId, Genre.GenreId;"}
{"instruction": "각 아티스트별로 출시한 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumsReleased FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 앨범의 총 길이는 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 1000 / 3600 AS TotalHours FROM Track JOIN Album ON Track.AlbumId = Album.AlbumId;"}
{"instruction": "가장 많이 재생된 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS Plays FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY Plays DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 포함된 총 트랙 수는 몇 개인가요?", "response": "SELECT COUNT(*) AS TotalTracks FROM InvoiceLine;"}
{"instruction": "각 아티스트별로 총 수익은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 앨범 중 가장 많은 트랙을 포함한 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS TrackCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 아티스트의 첫 앨범 발매일은 언제인가요?", "response": "SELECT Artist.Name, MIN(Album.ReleaseDate) AS FirstReleaseDate FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 최근에 구매된 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 많이 팔린 트랙 5개의 이름은 무엇인가요?", "response": "SELECT Track.Name, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY InvoiceLine.TrackId ORDER BY Sales DESC LIMIT 5;"}
{"instruction": "각 국가에서 가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, MAX(GenreSales.Sales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT Track.GenreId, Invoice.BillingCountry, COUNT(*) AS Sales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry, Track.GenreId) AS GenreSales ON Genre.GenreId = GenreSales.GenreId AND Invoice.BillingCountry = GenreSales.BillingCountry GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 고객별로 가장 많이 구매한 아티스트는 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Artist.Name, MAX(ArtistPurchases.Total) AS MaxPurchases FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId JOIN (SELECT Album.ArtistId, COUNT(*) AS Total FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Album.ArtistId) AS ArtistPurchases ON Artist.ArtistId = ArtistPurchases.ArtistId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많이 팔린 앨범의 이름은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중 가장 많은 장르를 다룬 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "가장 많이 구매한 고객의 이름은 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "각 고객별 평균 구매 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, AVG(Invoice.Total) AS AveragePurchase FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 얼마인가요?", "response": "SELECT (SELECT SUM(Invoice.Total) FROM Invoice WHERE Invoice.BillingCountry = 'USA') / (SELECT SUM(Invoice.Total) FROM Invoice) * 100 AS USAPercentage FROM Invoice;"}
{"instruction": "가장 많이 팔린 장르의 이름과 판매 수는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Genre.GenreId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY COUNT(*) DESC LIMIT 1;"}
{"instruction": "각 아티스트별 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000 AS AverageLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 매출을 연도별로 분류하세요.", "response": "SELECT strftime('%Y', Invoice.InvoiceDate) AS Year, SUM(Invoice.Total) AS TotalSales FROM Invoice GROUP BY Year;"}
{"instruction": "각 장르별로 평균 트랙 길이는 몇 초인가요?", "response": "SELECT Genre.Name, AVG(Track.Milliseconds) / 1000 AS AverageSeconds FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "가장 많이 구매된 앨범의 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY SUM(InvoiceLine.Quantity) DESC LIMIT 1;"}
{"instruction": "가장 높은 매출을 기록한 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 인보이스 중 가장 높은 금액의 인보이스는 얼마인가요?", "response": "SELECT MAX(Total) FROM Invoice;"}
{"instruction": "가장 많이 사용된 결제 방법은 무엇인가요?", "response": "SELECT PaymentMethod, COUNT(*) AS UsageCount FROM Invoice GROUP BY PaymentMethod ORDER BY UsageCount DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT Artist.Name, MIN(Track.Milliseconds) / 1000 AS ShortestTrackSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "각 국가별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "각 장르별 판매된 트랙의 총 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(InvoiceLine.TrackId) AS TracksSold FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId;"}
{"instruction": "가장 긴 트랙의 장르와 길이는 무엇인가요?", "response": "SELECT Genre.Name, MAX(Track.Milliseconds) / 1000 AS LongestTrackSeconds FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY LongestTrackSeconds DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 발매한 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumsReleased FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 트랙을 판매한 국가는 어디인가요?", "response": "SELECT Invoice.BillingCountry, COUNT(*) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 고객이 구매한 총 트랙 수는 몇 개인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(InvoiceLine.TrackId) AS TotalTracksPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId;"}
{"instruction": "각 아티스트의 평균 트랙 가격은 얼마인가요?", "response": "SELECT Artist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 얼마인가요?", "response": "SELECT (SELECT SUM(Total) FROM Invoice WHERE BillingCountry = 'USA') / (SELECT SUM(Total) FROM Invoice) * 100 AS USASalesPercentage FROM Invoice;"}
{"instruction": "가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) FROM Track;"}
{"instruction": "모든 고객의 총 구매 금액은 얼마인가요?", "response": "SELECT SUM(Total) FROM Invoice;"}
{"instruction": "가장 많은 앨범을 발매한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "각 국가에서 가장 인기 있는 장르는 무엇인가요?", "response": "WITH GenreSales AS (SELECT Invoice.BillingCountry, Genre.Name, COUNT(InvoiceLine.InvoiceLineId) AS Sales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.Name) SELECT BillingCountry, Name FROM GenreSales WHERE Sales = (SELECT MAX(Sales) FROM GenreSales AS gs2 WHERE gs2.BillingCountry = GenreSales.BillingCountry) GROUP BY BillingCountry;"}
{"instruction": "가장 많은 매출을 생성한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / (1000 * 60 * 60) AS TotalHours FROM Track;"}
{"instruction": "가장 많은 트랙을 보유한 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TrackCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "가장 많이 재생된 트랙의 아티스트는 누구인가요?", "response": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN (SELECT TrackId, COUNT(*) AS PlayCount FROM PlaylistTrack GROUP BY TrackId ORDER BY PlayCount DESC LIMIT 1) AS MostPlayed ON Track.TrackId = MostPlayed.TrackId;"}
{"instruction": "모든 고객의 평균 구매 횟수는 몇 번인가요?", "response": "SELECT AVG(PurchaseCount) FROM (SELECT CustomerId, COUNT(*) AS PurchaseCount FROM Invoice GROUP BY CustomerId) AS Purchases;"}
{"instruction": "가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "WITH CustomerGenre AS (SELECT Invoice.CustomerId, Genre.GenreId, COUNT(*) AS GenreCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.CustomerId, Genre.GenreId) SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(CustomerGenre.GenreCount) AS MostPurchased FROM CustomerGenre JOIN Customer ON CustomerGenre.CustomerId = Customer.CustomerId JOIN Genre ON CustomerGenre.GenreId = Genre.GenreId GROUP BY CustomerGenre.CustomerId;"}
{"instruction": "각 아티스트별로 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS HighestPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "가장 많은 트랙이 포함된 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "가장 많은 앨범을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(DISTINCT InvoiceLine.InvoiceId) AS AlbumsPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY AlbumsPurchased DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 많이 팔린 트랙은 무엇인가요?", "response": "SELECT Artist.Name, Track.Name, MAX(Sales.Quantity) FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN (SELECT TrackId, SUM(Quantity) AS Quantity FROM InvoiceLine GROUP BY TrackId) AS Sales ON Track.TrackId = Sales.TrackId GROUP BY Artist.ArtistId ORDER BY Sales.Quantity DESC;"}
{"instruction": "각 고객별 총 매출 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "전체 고객 중에서 가장 많이 구매한 상위 5명의 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(*) AS TotalPurchases FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalPurchases DESC LIMIT 5;"}
{"instruction": "각 나라별로 평균 구매 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AveragePurchase FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "가장 인기 있는 플레이리스트의 트랙 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS NumberOfTracks FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY NumberOfTracks DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 재생 시간은 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000 AS AverageLengthMinutes FROM Track;"}
{"instruction": "가장 비싼 앨범의 가격은 얼마인가요?", "response": "SELECT Album.Title, SUM(Track.UnitPrice) AS TotalPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TotalPrice DESC LIMIT 1;"}
{"instruction": "각 고객별 평균 구매 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, AVG(Invoice.Total) AS AveragePurchase FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많이 팔린 트랙의 이름과 판매량은?", "response": "SELECT Track.Name, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "모든 앨범의 평균 가격은 얼마인가요?", "response": "SELECT AVG(AlbumPrice) FROM (SELECT Album.AlbumId, SUM(Track.UnitPrice) AS AlbumPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId) AS AlbumPrices;"}
{"instruction": "가장 많은 장르를 다룬 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Artist.ArtistId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "각 국가에서 구매한 총 앨범 수는 몇 개인가요?", "response": "SELECT BillingCountry, COUNT(DISTINCT Invoice.InvoiceId) AS TotalAlbums FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY BillingCountry;"}
{"instruction": "가장 많이 판매된 앨범의 이름과 판매량은?", "response": "SELECT Album.Title, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Album.AlbumId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "총 고객 수는 몇 명인가요?", "response": "SELECT COUNT(*) FROM Customer;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "각 아티스트가 발매한 트랙의 평균 재생 시간은 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000 AS AverageTrackLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많이 구매한 장르의 트랙 수와 해당 장르는?", "response": "SELECT Genre.Name, COUNT(*) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 플레이리스트에 포함된 트랙의 평균 가격은 얼마인가요?", "response": "SELECT Playlist.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "최근 1년간 가장 많이 판매된 앨범은?", "response": "SELECT Album.Title, COUNT(*) AS Sales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Album.AlbumId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT Artist.Name, MIN(Track.Milliseconds) / 1000 AS ShortestTrackSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "전체 트랙 중에서 가장 많은 장르를 커버하는 플레이리스트는?", "response": "SELECT Playlist.Name, COUNT(DISTINCT Genre.GenreId) AS GenreCoverage FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Playlist.PlaylistId ORDER BY GenreCoverage DESC LIMIT 1;"}
{"instruction": "각 나라별로 가장 많이 팔린 트랙의 이름은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Track.Name, COUNT(*) AS Sales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry, Track.TrackId ORDER BY Invoice.BillingCountry, Sales DESC;"}
{"instruction": "각 아티스트별로 가장 최근에 출시한 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(Album.ReleaseDate) AS LatestRelease FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "총 매출이 가장 높은 트랙은 무엇인가요?", "response": "SELECT Track.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "각 앨범별로 평균 트랙 가격은 얼마인가요?", "response": "SELECT Album.Title, AVG(Track.UnitPrice) AS AveragePrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많이 구매된 미디어 타입은 무엇인가요?", "response": "SELECT MediaType.Name, COUNT(*) AS TotalPurchases FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY MediaType.MediaTypeId ORDER BY TotalPurchases DESC LIMIT 1;"}
{"instruction": "각 직원이 담당한 고객 수는 몇 명인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, COUNT(Customer.CustomerId) AS NumberOfCustomers FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Employee.EmployeeId;"}
{"instruction": "매출이 가장 높은 상위 3개 국가는 어디인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "각 앨범에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT Album.Title, MAX(Track.UnitPrice) AS HighestPrice FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "최근 6개월 동안 가장 많이 팔린 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-6 months') GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "가장 많은 곡이 포함된 플레이리스트의 이름은 무엇인가요?", "response": "SELECT Playlist.Name, COUNT(*) AS TracksCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TracksCount DESC LIMIT 1;"}
{"instruction": "각 나라별 평균 인보이스(청구서) 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceAmount FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "가장 많이 팔린 앨범의 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSold FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId GROUP BY Artist.ArtistId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "최근 1년간 각 아티스트의 앨범 판매량은 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(DISTINCT InvoiceLine.InvoiceId) AS AlbumsSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Artist.ArtistId;"}
{"instruction": "각 고객이 구매한 총 트랙 수는 몇 개인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(*) AS TotalTracksBought FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId;"}
{"instruction": "전체 트랙 중 미디어 타입별로 각각 몇 개의 트랙이 있는가요?", "response": "SELECT MediaType.Name, COUNT(*) AS NumberOfTracks FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.MediaTypeId;"}
{"instruction": "가장 많이 팔린 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Genre.GenreId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "각 직원별로 매출 기여도는 얼마인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, SUM(Invoice.Total) AS TotalSales FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Employee.EmployeeId;"}
{"instruction": "가장 최근에 출시된 트랙은 무엇인가요?", "response": "SELECT Name, MAX(ReleaseDate) AS LatestReleaseDate FROM Track;"}
{"instruction": "각 플레이리스트의 총 재생 시간은 몇 시간인가요?", "response": "SELECT Playlist.Name, SUM(Track.Milliseconds) / 3600000.0 AS TotalHours FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "가장 많이 구매된 트랙 3개와 해당 트랙의 판매량은?", "response": "SELECT Track.Name, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId ORDER BY Sales DESC LIMIT 3;"}
{"instruction": "가장 많은 고객을 가진 국가 상위 3개는 어디인가요?", "response": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC LIMIT 3;"}
{"instruction": "총 매출 중 디지털 다운로드가 차지하는 비율은 얼마인가요?", "response": "SELECT (SELECT SUM(Total) FROM Invoice WHERE BillingCountry = 'USA') / (SELECT SUM(Total) FROM Invoice) * 100 AS PercentageOfDigitalSalesUSA;"}
{"instruction": "각 아티스트별로 발매한 앨범 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(*) AS NumberOfAlbums FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "총 트랙 수 대비 재즈 장르 트랙의 비율은 얼마인가요?", "response": "SELECT (SELECT COUNT(*) FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Jazz')) / (SELECT COUNT(*) FROM Track) * 100 AS JazzTrackPercentage;"}
{"instruction": "모든 인보이스에서 평균 트랙 가격은 얼마인가요?", "response": "SELECT AVG(InvoiceLine.UnitPrice) AS AverageTrackPrice FROM InvoiceLine;"}
{"instruction": "각 고객별로 지출한 총액과 평균 구매 금액은 얼마인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent, AVG(Invoice.Total) AS AverageSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 많은 앨범을 판매한 아티스트 상위 5명은 누구인가요?", "response": "SELECT Artist.Name, COUNT(*) AS AlbumsSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY AlbumsSold DESC LIMIT 5;"}
{"instruction": "가장 높은 가격의 트랙을 판매한 국가는 어디인가요?", "response": "SELECT Invoice.BillingCountry, MAX(InvoiceLine.UnitPrice) AS HighestPrice FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry ORDER BY HighestPrice DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 많이 팔린 트랙 이름과 판매량은?", "response": "SELECT Artist.Name, Track.Name AS TrackName, COUNT(InvoiceLine.TrackId) AS Sales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY Sales DESC LIMIT 1;"}
{"instruction": "각 국가별로 가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Album.Title, MAX(AlbumSales.Sales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN (SELECT AlbumId, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Invoice.BillingCountry;"}
{"instruction": "각 아티스트가 판매한 총 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(InvoiceLine.TrackId) AS TotalTracksSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "최근 3년간 각 해의 총 매출은 얼마인가요?", "response": "SELECT STRFTIME('%Y', Invoice.InvoiceDate) AS Year, SUM(Total) AS TotalSales FROM Invoice WHERE InvoiceDate >= DATE('now', '-3 years') GROUP BY Year;"}
{"instruction": "가장 많이 팔린 장르의 트랙들 중에서 평균 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.GenreId = (SELECT GenreId FROM (SELECT GenreId, COUNT(*) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY GenreId ORDER BY TotalSales DESC LIMIT 1)) GROUP BY Genre.GenreId;"}
{"instruction": "각 플레이리스트에 속한 트랙들의 총 가격은 얼마인가요?", "response": "SELECT Playlist.Name, SUM(Track.UnitPrice) AS TotalPrice FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenreCount) AS FavoriteGenre FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT InvoiceLine.InvoiceId, GenreId, COUNT(*) AS GenreCount FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY InvoiceLine.InvoiceId, GenreId) AS GenreSales ON Invoice.InvoiceId = GenreSales.InvoiceId AND Track.GenreId = GenreSales.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "각 앨범의 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "모든 인보이스에 대해 평균적으로 각 인보이스에 몇 개의 트랙이 포함되어 있나요?", "response": "SELECT AVG(TrackCount) AS AverageTracksPerInvoice FROM (SELECT InvoiceId, COUNT(*) AS TrackCount FROM InvoiceLine GROUP BY InvoiceId);"}
{"instruction": "가장 많이 사용된 결제 방식은 무엇인가요?", "response": "SELECT Invoice.BillingCountry, PaymentMethod, COUNT(*) AS UsageCount FROM Invoice GROUP BY PaymentMethod ORDER BY UsageCount DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Artist.Name, AVG(Track.Milliseconds) / 60000.0 AS AverageTrackLengthMinutes FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 긴 트랙과 가장 짧은 트랙의 길이 차이는 몇 분인가요?", "response": "SELECT (MAX(Track.Milliseconds) - MIN(Track.Milliseconds)) / 60000.0 AS LengthDifferenceMinutes FROM Track;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 일인가요?", "response": "SELECT SUM(Milliseconds) / 86400000.0 AS TotalDays FROM Track;"}
{"instruction": "각 고객이 첫 구매를 한 날짜는 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MIN(Invoice.InvoiceDate) AS FirstPurchaseDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 최근에 방문한 고객은 누구이며, 마지막 방문 날짜는 언제인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.InvoiceDate) AS LastVisitDate FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;"}
{"instruction": "각 아티스트별로 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT Artist.Name, MAX(Track.UnitPrice) AS HighestPrice FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 고객의 평균 나이는 몇 살인가요?", "response": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(BirthDate)) AS AverageAge FROM Customer;"}
{"instruction": "가장 많은 곡을 구매한 고객은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(*) AS TotalPurchases FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Customer.CustomerId ORDER BY TotalPurchases DESC LIMIT 1;"}
{"instruction": "각 국가별 평균 인보이스 총액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceTotal FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "모든 앨범 중에서 가장 많은 트랙을 포함하고 있는 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(*) AS TrackCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "모든 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) AS HighestPrice FROM Track;"}
{"instruction": "모든 인보이스 중에서 가장 높은 총액을 기록한 인보이스는 얼마인가요?", "response": "SELECT MAX(Total) AS HighestInvoiceTotal FROM Invoice;"}
{"instruction": "각 아티스트별로 첫 앨범을 발매한 해는 언제인가요?", "response": "SELECT Artist.Name, MIN(YEAR(Album.ReleaseDate)) AS FirstReleaseYear FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 많은 고객을 보유한 국가는 어디인가요?", "response": "SELECT Country, COUNT(*) AS CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC LIMIT 1;"}
{"instruction": "각 아티스트의 총 앨범 판매량은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "최근 1년 동안 가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId WHERE Invoice.InvoiceDate >= DATE('now', '-1 year') GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "모든 고객에 대해 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS GenreCount FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY GenreCount DESC LIMIT 1;"}
{"instruction": "가장 많이 팔린 트랙 5개는 무엇인가요?", "response": "SELECT Track.Name, COUNT(*) AS Sales FROM Track JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Track.TrackId ORDER BY Sales DESC LIMIT 5;"}
{"instruction": "모든 트랙 중에서 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT MIN(Milliseconds) / 1000.0 AS ShortestTrackSeconds FROM Track;"}
{"instruction": "각 국가별 평균 트랙 구매 단가는 얼마인가요?", "response": "SELECT Invoice.BillingCountry, AVG(Track.UnitPrice) AS AveragePrice FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많은 플레이리스트에 포함된 트랙은 무엇인가요?", "response": "SELECT Track.Name, COUNT(*) AS PlaylistCount FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.TrackId ORDER BY PlaylistCount DESC LIMIT 1;"}
{"instruction": "모든 아티스트 중에서 가장 많은 앨범을 발매한 아티스트는 누구인가요?", "response": "SELECT Artist.Name, COUNT(*) AS AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId ORDER BY AlbumCount DESC LIMIT 1;"}
{"instruction": "가장 많이 구매된 앨범 상위 3개는 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSales DESC LIMIT 3;"}
{"instruction": "모든 트랙에 대해 평균 재생 시간은 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000.0 AS AverageDurationMinutes FROM Track;"}
{"instruction": "각 고객별로 총 구매액이 가장 높은 상위 5명은 누구인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 5;"}
{"instruction": "가장 비싼 트랙 3개의 이름과 가격은 무엇인가요?", "response": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 3;"}
{"instruction": "모든 인보이스 중에서 총액이 가장 낮은 인보이스는 얼마인가요?", "response": "SELECT MIN(Total) AS LowestInvoiceTotal FROM Invoice;"}
{"instruction": "각 아티스트별로 가장 짧은 트랙의 길이는 몇 초인가요?", "response": "SELECT Artist.Name, MIN(Track.Milliseconds) / 1000.0 AS ShortestTrackSeconds FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 고객의 총 구매 횟수는 몇 번인가요?", "response": "SELECT COUNT(*) AS TotalPurchases FROM Invoice;"}
{"instruction": "각 국가별로 가장 많이 구매된 트랙의 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, MAX(GenreSales.TotalSales) AS MaxSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT Track.GenreId, COUNT(*) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.GenreId) AS GenreSales ON Genre.GenreId = GenreSales.GenreId GROUP BY Invoice.BillingCountry;"}
{"instruction": "가장 많이 팔린 아티스트 상위 5명은 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalSales DESC LIMIT 5;"}
{"instruction": "각 플레이리스트에 대한 총 재생 시간은 몇 시간인가요?", "response": "SELECT Playlist.Name, SUM(Track.Milliseconds) / 3600000.0 AS TotalHours FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId JOIN Track ON PlaylistTrack.TrackId = Track.TrackId GROUP BY Playlist.PlaylistId;"}
{"instruction": "최근 5년 간 각 년도별 총 매출은 얼마인가요?", "response": "SELECT STRFTIME('%Y', Invoice.InvoiceDate) AS Year, SUM(Total) AS TotalSales FROM Invoice WHERE InvoiceDate >= DATE('now', '-5 years') GROUP BY Year;"}
{"instruction": "가장 빈번하게 구매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name, COUNT(*) AS TotalPurchases FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalPurchases DESC LIMIT 1;"}
{"instruction": "각 직원별로 지원하는 고객 수는 몇 명인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, COUNT(Customer.CustomerId) AS NumberOfCustomers FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Employee.EmployeeId;"}
{"instruction": "각 아티스트별 평균 앨범 판매량은 몇 개인가요?", "response": "SELECT Artist.Name, AVG(AlbumSales.Sales) AS AverageSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN (SELECT AlbumId, COUNT(*) AS Sales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "모든 인보이스에 대한 총 판매 트랙 수는 몇 개인가요?", "response": "SELECT COUNT(*) AS TotalTracksSold FROM InvoiceLine;"}
{"instruction": "각 장르별로 평균 트랙 가격은 얼마인가요?", "response": "SELECT Genre.Name, AVG(Track.UnitPrice) AS AveragePrice FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 60000.0 AS LongestTrackMinutes FROM Track;"}
{"instruction": "각 고객별로 구매한 총 앨범 수는 몇 개인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(DISTINCT Album.AlbumId) AS TotalAlbums FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId;"}
{"instruction": "모든 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) AS HighestPrice FROM Track;"}
{"instruction": "각 국가별 평균 인보이스 총액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceTotal FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "모든 인보이스 중에서 가장 높은 총액은 얼마인가요?", "response": "SELECT MAX(Total) AS HighestInvoiceTotal FROM Invoice;"}
{"instruction": "가장 많은 트랙을 판매한 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 총 트랙 판매량은 몇 개인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.Quantity) AS MostPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT Track.GenreId, COUNT(*) AS Quantity FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.GenreId) AS GenrePurchases ON Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 최근에 구매된 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "각 플레이리스트의 트랙 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(*) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) AS AveragePrice FROM Track;"}
{"instruction": "각 직원이 지원하는 고객들의 총 구매액은 얼마인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, SUM(Invoice.Total) AS TotalSales FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Employee.EmployeeId;"}
{"instruction": "가장 많이 팔린 트랙의 아티스트는 누구인가요?", "response": "SELECT Artist.Name, MAX(TrackSales.Quantity) AS MaxSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN (SELECT TrackId, COUNT(*) AS Quantity FROM InvoiceLine GROUP BY TrackId) AS TrackSales ON Track.TrackId = TrackSales.TrackId GROUP BY Artist.ArtistId ORDER BY MaxSales DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 대해 총 판매액은 얼마인가요?", "response": "SELECT SUM(Total) AS TotalSales FROM Invoice;"}
{"instruction": "각 앨범별로 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 긴 트랙의 재생 시간은 몇 분인가요?", "response": "SELECT MAX(Milliseconds) / 60000.0 AS LongestTrackMinutes FROM Track;"}
{"instruction": "각 고객별로 구매한 총 앨범 수는 몇 개인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, COUNT(DISTINCT Album.AlbumId) AS TotalAlbums FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId GROUP BY Customer.CustomerId;"}
{"instruction": "모든 트랙 중에서 가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT MAX(UnitPrice) AS HighestPrice FROM Track;"}
{"instruction": "각 국가별 평균 인보이스 총액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceTotal FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "모든 인보이스 중에서 가장 높은 총액은 얼마인가요?", "response": "SELECT MAX(Total) AS HighestInvoiceTotal FROM Invoice;"}
{"instruction": "가장 많은 트랙을 판매한 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 총 트랙 판매량은 몇 개인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "각 고객별로 가장 많이 구매한 장르는 무엇인가요?", "response": "SELECT Customer.FirstName, Customer.LastName, Genre.Name, MAX(GenrePurchases.Quantity) AS MostPurchased FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId JOIN (SELECT Track.GenreId, COUNT(*) AS Quantity FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.GenreId) AS GenrePurchases ON Genre.GenreId = GenrePurchases.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "가장 최근에 구매된 트랙은 무엇인가요?", "response": "SELECT Track.Name FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId ORDER BY Invoice.InvoiceDate DESC LIMIT 1;"}
{"instruction": "각 플레이리스트의 트랙 수는 몇 개인가요?", "response": "SELECT Playlist.Name, COUNT(*) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId;"}
{"instruction": "모든 트랙의 평균 가격은 얼마인가요?", "response": "SELECT AVG(UnitPrice) AS AveragePrice FROM Track;"}
{"instruction": "각 직원이 지원하는 고객들의 총 구매액은 얼마인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, SUM(Invoice.Total) AS TotalSales FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Employee.EmployeeId;"}
{"instruction": "가장 많이 팔린 트랙의 아티스트는 누구인가요?", "response": "SELECT Artist.Name, MAX(TrackSales.Quantity) AS MaxSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN (SELECT TrackId, COUNT(*) AS Quantity FROM InvoiceLine GROUP BY TrackId) AS TrackSales ON Track.TrackId = TrackSales.TrackId GROUP BY Artist.ArtistId ORDER BY MaxSales DESC LIMIT 1;"}
{"instruction": "모든 인보이스에 대해 총 판매액은 얼마인가요?", "response": "SELECT SUM(Total) AS TotalSales FROM Invoice;"}
{"instruction": "각 앨범별로 평균 트랙 길이는 몇 분인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000.0 AS AverageLengthMinutes FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "각 아티스트의 총 앨범 판매량은 얼마인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId;"}
{"instruction": "어떤 고객이 가장 많은 금액을 지출했나요?", "response": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 1;"}
{"instruction": "가장 인기 있는 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 나라별로 가장 많은 지출을 한 고객은 누구인가요?", "response": "SELECT Customer.Country, Customer.FirstName, Customer.LastName, SUM(Invoice.Total) AS TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.Country, Customer.CustomerId ORDER BY Customer.Country, TotalSpent DESC;"}
{"instruction": "각 직원이 담당한 고객 수는 몇 명인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, COUNT(Customer.CustomerId) AS CustomerCount FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Employee.EmployeeId;"}
{"instruction": "각 앨범에서 가장 많이 팔린 트랙은 무엇인가요?", "response": "SELECT Album.Title, Track.Name, MAX(InvoiceLine.Quantity) AS MaxSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "어떤 플레이리스트에 가장 많은 트랙이 포함되어 있나요?", "response": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) AS TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.PlaylistId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "모든 고객의 평균 지출 금액은 얼마인가요?", "response": "SELECT AVG(Total) AS AverageSpent FROM Invoice;"}
{"instruction": "가장 많이 팔린 앨범은 무엇인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSold FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId ORDER BY TotalSold DESC LIMIT 1;"}
{"instruction": "모든 트랙의 평균 길이는 몇 분인가요?", "response": "SELECT AVG(Milliseconds) / 60000 AS AverageLengthMinutes FROM Track;"}
{"instruction": "각 나라에서 가장 많이 판매된 장르는 무엇인가요?", "response": "SELECT Invoice.BillingCountry, Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId GROUP BY Invoice.BillingCountry, Genre.GenreId ORDER BY Invoice.BillingCountry, TotalSales DESC;"}
{"instruction": "각 앨범에 대한 평균 트랙 길이는 얼마인가요?", "response": "SELECT Album.Title, AVG(Track.Milliseconds) / 60000 AS AverageTrackLengthMinutes FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId;"}
{"instruction": "가장 긴 트랙은 무엇인가요?", "response": "SELECT Name, MAX(Milliseconds) / 60000 AS LongestTrackMinutes FROM Track;"}
{"instruction": "각 고객별로 지출한 총액과 평균 지출액은 얼마인가요?", "response": "SELECT CustomerId, SUM(Total) AS TotalSpent, AVG(Total) AS AverageSpent FROM Invoice GROUP BY CustomerId;"}
{"instruction": "각 직원이 담당한 고객들로부터 얻은 총 수익은 얼마인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, SUM(Invoice.Total) AS TotalRevenue FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Employee.EmployeeId;"}
{"instruction": "어떤 아티스트의 트랙이 가장 많이 팔렸나요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.Quantity) AS TotalTracksSold FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalTracksSold DESC LIMIT 1;"}
{"instruction": "각 장르별로 판매된 트랙 수는 몇 개인가요?", "response": "SELECT Genre.Name, COUNT(InvoiceLine.TrackId) AS TracksSold FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId;"}
{"instruction": "각 나라별 총 판매량은 얼마인가요?", "response": "SELECT BillingCountry, SUM(Total) AS TotalSales FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "어떤 미디어 타입이 가장 인기가 많나요?", "response": "SELECT MediaType.Name, COUNT(InvoiceLine.InvoiceLineId) AS Popularity FROM MediaType JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY MediaType.MediaTypeId ORDER BY Popularity DESC LIMIT 1;"}
{"instruction": "각 직원별 고객 지원에 소요된 시간의 평균은 몇 시간인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, AVG(SupportTime) AS AverageSupportTimeHours FROM (SELECT EmployeeId, CustomerId, (JulianDay(Invoice.InvoiceDate) - JulianDay(Customer.SupportStartDate)) * 24 AS SupportTime FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId) JOIN Employee ON EmployeeId = Employee.EmployeeId GROUP BY Employee.EmployeeId;"}
{"instruction": "각 아티스트별로 제공된 트랙 수는 몇 개인가요?", "response": "SELECT Artist.Name, COUNT(Track.TrackId) AS TracksProvided FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "가장 비싼 트랙의 가격은 얼마인가요?", "response": "SELECT Name, MAX(UnitPrice) AS HighestPrice FROM Track;"}
{"instruction": "각 고객이 구매한 다른 고객 수는 몇 명인가요?", "response": "SELECT Customer.CustomerId, COUNT(DISTINCT Invoice.CustomerId) AS UniqueCustomerPurchases FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Customer.CustomerId;"}
{"instruction": "각 나라별 평균 인보이스 금액은 얼마인가요?", "response": "SELECT BillingCountry, AVG(Total) AS AverageInvoiceAmount FROM Invoice GROUP BY BillingCountry;"}
{"instruction": "각 앨범별 평균 트랙 판매량은 얼마인가요?", "response": "SELECT Album.Title, AVG(InvoiceLine.Quantity) AS AverageSalesPerTrack FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "가장 많은 트랙이 포함된 앨범은 무엇인가요?", "response": "SELECT Album.Title, COUNT(Track.TrackId) AS TrackCount FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY TrackCount DESC LIMIT 1;"}
{"instruction": "각 고객별로 구매한 장르가 가장 많은 트랙은 무엇인가요?", "response": "SELECT Customer.CustomerId, Genre.Name, MAX(Count) AS MaxGenrePurchases FROM (SELECT Invoice.CustomerId, Track.GenreId, COUNT(Track.GenreId) AS Count FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.CustomerId, Track.GenreId) AS GenrePurchases JOIN Genre ON GenrePurchases.GenreId = Genre.GenreId GROUP BY CustomerId;"}
{"instruction": "각 직원별로 담당한 가장 많은 지출을 한 고객은 누구인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, Customer.FirstName AS CustomerFirstName, Customer.LastName AS CustomerLastName, MAX(Invoice.Total) AS MaxSpent FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Employee.EmployeeId;"}
{"instruction": "가장 많이 판매된 트랙의 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalSales FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalSales DESC LIMIT 1;"}
{"instruction": "각 아티스트별로 가장 많이 판매된 앨범은 무엇인가요?", "response": "SELECT Artist.Name, Album.Title, MAX(AlbumSales.TotalSales) AS MaxSales FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN (SELECT AlbumId, SUM(InvoiceLine.Quantity) AS TotalSales FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY AlbumId) AS AlbumSales ON Album.AlbumId = AlbumSales.AlbumId GROUP BY Artist.ArtistId;"}
{"instruction": "각 나라에서 구매한 총 트랙 수는 몇 개인가요?", "response": "SELECT Invoice.BillingCountry, COUNT(InvoiceLine.TrackId) AS TotalTracksPurchased FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry;"}
{"instruction": "모든 인보이스에 대한 평균 트랙 가격은 얼마인가요?", "response": "SELECT AVG(InvoiceLine.UnitPrice) AS AverageTrackPrice FROM InvoiceLine;"}
{"instruction": "가장 많은 수익을 낸 아티스트는 누구인가요?", "response": "SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalRevenue FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Artist.ArtistId ORDER BY TotalRevenue DESC LIMIT 1;"}
{"instruction": "각 고객별로 가장 많이 구매한 트랙의 장르는 무엇인가요?", "response": "SELECT Customer.CustomerId, Genre.Name, MAX(GenrePurchases.Count) AS MaxPurchases FROM (SELECT Invoice.CustomerId, Track.GenreId, COUNT(*) AS Count FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Invoice.CustomerId, Track.GenreId) AS GenrePurchases JOIN Genre ON GenrePurchases.GenreId = Genre.GenreId GROUP BY Customer.CustomerId;"}
{"instruction": "각 앨범에 대한 총 판매량은 얼마인가요?", "response": "SELECT Album.Title, SUM(InvoiceLine.Quantity) AS TotalSales FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Album.AlbumId;"}
{"instruction": "모든 트랙의 총 재생 시간은 몇 시간인가요?", "response": "SELECT SUM(Milliseconds) / 3600000.0 AS TotalHours FROM Track;"}
{"instruction": "각 고객별 평균 구매 단위 가격은 얼마인가요?", "response": "SELECT CustomerId, AVG(UnitPrice) AS AveragePrice FROM InvoiceLine GROUP BY CustomerId;"}
{"instruction": "모든 인보이스에 대한 총 판매량은 얼마인가요?", "response": "SELECT SUM(Total) AS TotalSales FROM Invoice;"}
{"instruction": "각 직원별로 관리하는 고객의 평균 지출액은 얼마인가요?", "response": "SELECT Employee.FirstName, Employee.LastName, AVG(CustomerSpend.TotalSpend) AS AverageSpend FROM Employee JOIN (SELECT SupportRepId, CustomerId, SUM(Total) AS TotalSpend FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY CustomerId) AS CustomerSpend ON Employee.EmployeeId = CustomerSpend.SupportRepId GROUP BY Employee.EmployeeId;"}
{"instruction": "가장 인기 있는 장르는 무엇인가요?", "response": "SELECT Genre.Name, SUM(InvoiceLine.Quantity) AS TotalQuantity FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId GROUP BY Genre.GenreId ORDER BY TotalQuantity DESC LIMIT 1;"}
